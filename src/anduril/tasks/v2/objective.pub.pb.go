// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: anduril/tasks/v2/objective.pub.proto

package tasksv2

import (
	_type "github.com/anduril/lattice-sdk-go/src/anduril/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the objective of a task.
type Objective struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Objective:
	//
	//	*Objective_EntityId
	//	*Objective_Point
	Objective     isObjective_Objective `protobuf_oneof:"objective"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Objective) Reset() {
	*x = Objective{}
	mi := &file_anduril_tasks_v2_objective_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Objective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Objective) ProtoMessage() {}

func (x *Objective) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_objective_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Objective.ProtoReflect.Descriptor instead.
func (*Objective) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_objective_pub_proto_rawDescGZIP(), []int{0}
}

func (x *Objective) GetObjective() isObjective_Objective {
	if x != nil {
		return x.Objective
	}
	return nil
}

func (x *Objective) GetEntityId() string {
	if x != nil {
		if x, ok := x.Objective.(*Objective_EntityId); ok {
			return x.EntityId
		}
	}
	return ""
}

func (x *Objective) GetPoint() *Point {
	if x != nil {
		if x, ok := x.Objective.(*Objective_Point); ok {
			return x.Point
		}
	}
	return nil
}

type isObjective_Objective interface {
	isObjective_Objective()
}

type Objective_EntityId struct {
	// Prefer Entity Objectives whenever the objective is in fact an entity. In other words, don't take position/point
	// out of an entity and pass it as a simple point.
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3,oneof"`
}

type Objective_Point struct {
	// Point objectives for simple reference points that are not geo entities.
	Point *Point `protobuf:"bytes,5,opt,name=point,proto3,oneof"`
}

func (*Objective_EntityId) isObjective_Objective() {}

func (*Objective_Point) isObjective_Objective() {}

// Describes a single point location.
type Point struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A human readable name for the point.
	ReferenceName string `protobuf:"bytes,1,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	// Indicates the objective is the provided location.
	Lla *_type.LLA `protobuf:"bytes,2,opt,name=lla,proto3" json:"lla,omitempty"`
	// An optional entity id that is provided for reverse lookup purposes. This may be used any time the UI might
	// have to convert a geoentity to statically defined LLA.
	BackingEntityId string `protobuf:"bytes,3,opt,name=backing_entity_id,json=backingEntityId,proto3" json:"backing_entity_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_anduril_tasks_v2_objective_pub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_objective_pub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_objective_pub_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetReferenceName() string {
	if x != nil {
		return x.ReferenceName
	}
	return ""
}

func (x *Point) GetLla() *_type.LLA {
	if x != nil {
		return x.Lla
	}
	return nil
}

func (x *Point) GetBackingEntityId() string {
	if x != nil {
		return x.BackingEntityId
	}
	return ""
}

var File_anduril_tasks_v2_objective_pub_proto protoreflect.FileDescriptor

const file_anduril_tasks_v2_objective_pub_proto_rawDesc = "" +
	"\n" +
	"$anduril/tasks/v2/objective.pub.proto\x12\x10anduril.tasks.v2\x1a\x1danduril/type/coords.pub.proto\"n\n" +
	"\tObjective\x12\x1d\n" +
	"\tentity_id\x18\x01 \x01(\tH\x00R\bentityId\x12/\n" +
	"\x05point\x18\x05 \x01(\v2\x17.anduril.tasks.v2.PointH\x00R\x05pointB\v\n" +
	"\tobjectiveJ\x04\b\x02\x10\x03\"\x7f\n" +
	"\x05Point\x12%\n" +
	"\x0ereference_name\x18\x01 \x01(\tR\rreferenceName\x12#\n" +
	"\x03lla\x18\x02 \x01(\v2\x11.anduril.type.LLAR\x03lla\x12*\n" +
	"\x11backing_entity_id\x18\x03 \x01(\tR\x0fbackingEntityIdB\xcb\x01\n" +
	"\x14com.anduril.tasks.v2B\x11ObjectivePubProtoP\x01Z>github.com/anduril/lattice-sdk-go/src/anduril/tasks/v2;tasksv2\xa2\x02\x03ATX\xaa\x02\x10Anduril.Tasks.V2\xca\x02\x10Anduril\\Tasks\\V2\xe2\x02\x1cAnduril\\Tasks\\V2\\GPBMetadata\xea\x02\x12Anduril::Tasks::V2b\x06proto3"

var (
	file_anduril_tasks_v2_objective_pub_proto_rawDescOnce sync.Once
	file_anduril_tasks_v2_objective_pub_proto_rawDescData []byte
)

func file_anduril_tasks_v2_objective_pub_proto_rawDescGZIP() []byte {
	file_anduril_tasks_v2_objective_pub_proto_rawDescOnce.Do(func() {
		file_anduril_tasks_v2_objective_pub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anduril_tasks_v2_objective_pub_proto_rawDesc), len(file_anduril_tasks_v2_objective_pub_proto_rawDesc)))
	})
	return file_anduril_tasks_v2_objective_pub_proto_rawDescData
}

var file_anduril_tasks_v2_objective_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_anduril_tasks_v2_objective_pub_proto_goTypes = []any{
	(*Objective)(nil), // 0: anduril.tasks.v2.Objective
	(*Point)(nil),     // 1: anduril.tasks.v2.Point
	(*_type.LLA)(nil), // 2: anduril.type.LLA
}
var file_anduril_tasks_v2_objective_pub_proto_depIdxs = []int32{
	1, // 0: anduril.tasks.v2.Objective.point:type_name -> anduril.tasks.v2.Point
	2, // 1: anduril.tasks.v2.Point.lla:type_name -> anduril.type.LLA
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_anduril_tasks_v2_objective_pub_proto_init() }
func file_anduril_tasks_v2_objective_pub_proto_init() {
	if File_anduril_tasks_v2_objective_pub_proto != nil {
		return
	}
	file_anduril_tasks_v2_objective_pub_proto_msgTypes[0].OneofWrappers = []any{
		(*Objective_EntityId)(nil),
		(*Objective_Point)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anduril_tasks_v2_objective_pub_proto_rawDesc), len(file_anduril_tasks_v2_objective_pub_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_tasks_v2_objective_pub_proto_goTypes,
		DependencyIndexes: file_anduril_tasks_v2_objective_pub_proto_depIdxs,
		MessageInfos:      file_anduril_tasks_v2_objective_pub_proto_msgTypes,
	}.Build()
	File_anduril_tasks_v2_objective_pub_proto = out.File
	file_anduril_tasks_v2_objective_pub_proto_goTypes = nil
	file_anduril_tasks_v2_objective_pub_proto_depIdxs = nil
}
