// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: anduril/tasks/v2/shared/strike.pub.proto

package tasksv2

import (
	v2 "github.com/anduril/lattice-sdk-go/src/anduril/tasks/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Maps to BREVITY code SMACK.
type Smack struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Objective to SMACK.
	Objective *v2.Objective `protobuf:"bytes,1,opt,name=objective,proto3" json:"objective,omitempty"`
	// Optional parameters associated with Strike Tasks.
	Parameters    *StrikeParameters `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Smack) Reset() {
	*x = Smack{}
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Smack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Smack) ProtoMessage() {}

func (x *Smack) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Smack.ProtoReflect.Descriptor instead.
func (*Smack) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP(), []int{0}
}

func (x *Smack) GetObjective() *v2.Objective {
	if x != nil {
		return x.Objective
	}
	return nil
}

func (x *Smack) GetParameters() *StrikeParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Maps to UCI StrikeTask.
type Strike struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Objective to Strike.
	Objective *v2.Objective `protobuf:"bytes,1,opt,name=objective,proto3" json:"objective,omitempty"`
	// Angle range within which to ingress.
	IngressAngle *v2.AnglePair `protobuf:"bytes,2,opt,name=ingress_angle,json=ingressAngle,proto3" json:"ingress_angle,omitempty"`
	// Distance at which to yield flight control to the onboard flight computer rather than
	// higher level autonomy.
	StrikeReleaseConstraint *StrikeReleaseConstraint `protobuf:"bytes,3,opt,name=strike_release_constraint,json=strikeReleaseConstraint,proto3" json:"strike_release_constraint,omitempty"`
	// Optional parameters associated with the Strike task.
	Parameters    *StrikeParameters `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Strike) Reset() {
	*x = Strike{}
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Strike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strike) ProtoMessage() {}

func (x *Strike) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strike.ProtoReflect.Descriptor instead.
func (*Strike) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP(), []int{1}
}

func (x *Strike) GetObjective() *v2.Objective {
	if x != nil {
		return x.Objective
	}
	return nil
}

func (x *Strike) GetIngressAngle() *v2.AnglePair {
	if x != nil {
		return x.IngressAngle
	}
	return nil
}

func (x *Strike) GetStrikeReleaseConstraint() *StrikeReleaseConstraint {
	if x != nil {
		return x.StrikeReleaseConstraint
	}
	return nil
}

func (x *Strike) GetParameters() *StrikeParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Maps to UCI StrikeTaskReleaseConstraintsType.
type StrikeReleaseConstraint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to StrikeReleaseConstraint:
	//
	//	*StrikeReleaseConstraint_ReleaseArea
	StrikeReleaseConstraint isStrikeReleaseConstraint_StrikeReleaseConstraint `protobuf_oneof:"strike_release_constraint"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StrikeReleaseConstraint) Reset() {
	*x = StrikeReleaseConstraint{}
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrikeReleaseConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrikeReleaseConstraint) ProtoMessage() {}

func (x *StrikeReleaseConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrikeReleaseConstraint.ProtoReflect.Descriptor instead.
func (*StrikeReleaseConstraint) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP(), []int{2}
}

func (x *StrikeReleaseConstraint) GetStrikeReleaseConstraint() isStrikeReleaseConstraint_StrikeReleaseConstraint {
	if x != nil {
		return x.StrikeReleaseConstraint
	}
	return nil
}

func (x *StrikeReleaseConstraint) GetReleaseArea() *v2.AreaConstraints {
	if x != nil {
		if x, ok := x.StrikeReleaseConstraint.(*StrikeReleaseConstraint_ReleaseArea); ok {
			return x.ReleaseArea
		}
	}
	return nil
}

type isStrikeReleaseConstraint_StrikeReleaseConstraint interface {
	isStrikeReleaseConstraint_StrikeReleaseConstraint()
}

type StrikeReleaseConstraint_ReleaseArea struct {
	ReleaseArea *v2.AreaConstraints `protobuf:"bytes,1,opt,name=release_area,json=releaseArea,proto3,oneof"`
}

func (*StrikeReleaseConstraint_ReleaseArea) isStrikeReleaseConstraint_StrikeReleaseConstraint() {}

type StrikeParameters struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	PayloadsToEmploy []*PayloadConfiguration `protobuf:"bytes,1,rep,name=payloads_to_employ,json=payloadsToEmploy,proto3" json:"payloads_to_employ,omitempty"`
	// GPS time at which the strike should be performed.
	DesiredImpactTime *durationpb.Duration `protobuf:"bytes,2,opt,name=desired_impact_time,json=desiredImpactTime,proto3" json:"desired_impact_time,omitempty"`
	// Bearing at which to perform the run in for a strike.
	RunInBearing float64 `protobuf:"fixed64,3,opt,name=run_in_bearing,json=runInBearing,proto3" json:"run_in_bearing,omitempty"`
	// Angle which to glide into the run in for a strike.
	GlideSlopeAngle float64 `protobuf:"fixed64,4,opt,name=glide_slope_angle,json=glideSlopeAngle,proto3" json:"glide_slope_angle,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StrikeParameters) Reset() {
	*x = StrikeParameters{}
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrikeParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrikeParameters) ProtoMessage() {}

func (x *StrikeParameters) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrikeParameters.ProtoReflect.Descriptor instead.
func (*StrikeParameters) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP(), []int{3}
}

func (x *StrikeParameters) GetPayloadsToEmploy() []*PayloadConfiguration {
	if x != nil {
		return x.PayloadsToEmploy
	}
	return nil
}

func (x *StrikeParameters) GetDesiredImpactTime() *durationpb.Duration {
	if x != nil {
		return x.DesiredImpactTime
	}
	return nil
}

func (x *StrikeParameters) GetRunInBearing() float64 {
	if x != nil {
		return x.RunInBearing
	}
	return 0
}

func (x *StrikeParameters) GetGlideSlopeAngle() float64 {
	if x != nil {
		return x.GlideSlopeAngle
	}
	return 0
}

// Individual payload configuration.
type PayloadConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID or descriptor for the capability.
	CapabilityId  string `protobuf:"bytes,1,opt,name=capability_id,json=capabilityId,proto3" json:"capability_id,omitempty"`
	Quantity      uint32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadConfiguration) Reset() {
	*x = PayloadConfiguration{}
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadConfiguration) ProtoMessage() {}

func (x *PayloadConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadConfiguration.ProtoReflect.Descriptor instead.
func (*PayloadConfiguration) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP(), []int{4}
}

func (x *PayloadConfiguration) GetCapabilityId() string {
	if x != nil {
		return x.CapabilityId
	}
	return ""
}

func (x *PayloadConfiguration) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Releases a payload from the vehicle
type ReleasePayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The payload(s) that will be released
	Payloads []*PayloadConfiguration `protobuf:"bytes,1,rep,name=payloads,proto3" json:"payloads,omitempty"`
	// Optional objective, of where the payload should be dropped. If omitted the payload will drop the current location
	Objective *v2.Objective `protobuf:"bytes,2,opt,name=objective,proto3" json:"objective,omitempty"`
	// Types that are valid to be assigned to ReleaseMethod:
	//
	//	*ReleasePayload_PrecisionRelease
	ReleaseMethod isReleasePayload_ReleaseMethod `protobuf_oneof:"release_method"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleasePayload) Reset() {
	*x = ReleasePayload{}
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePayload) ProtoMessage() {}

func (x *ReleasePayload) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePayload.ProtoReflect.Descriptor instead.
func (*ReleasePayload) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP(), []int{5}
}

func (x *ReleasePayload) GetPayloads() []*PayloadConfiguration {
	if x != nil {
		return x.Payloads
	}
	return nil
}

func (x *ReleasePayload) GetObjective() *v2.Objective {
	if x != nil {
		return x.Objective
	}
	return nil
}

func (x *ReleasePayload) GetReleaseMethod() isReleasePayload_ReleaseMethod {
	if x != nil {
		return x.ReleaseMethod
	}
	return nil
}

func (x *ReleasePayload) GetPrecisionRelease() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ReleaseMethod.(*ReleasePayload_PrecisionRelease); ok {
			return x.PrecisionRelease
		}
	}
	return nil
}

type isReleasePayload_ReleaseMethod interface {
	isReleasePayload_ReleaseMethod()
}

type ReleasePayload_PrecisionRelease struct {
	// Attempt to place the payload delicately from a standstill
	PrecisionRelease *emptypb.Empty `protobuf:"bytes,3,opt,name=precision_release,json=precisionRelease,proto3,oneof"`
}

func (*ReleasePayload_PrecisionRelease) isReleasePayload_ReleaseMethod() {}

var File_anduril_tasks_v2_shared_strike_pub_proto protoreflect.FileDescriptor

const file_anduril_tasks_v2_shared_strike_pub_proto_rawDesc = "" +
	"\n" +
	"(anduril/tasks/v2/shared/strike.pub.proto\x12\x10anduril.tasks.v2\x1a!anduril/tasks/v2/common.pub.proto\x1a$anduril/tasks/v2/objective.pub.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\"\x86\x01\n" +
	"\x05Smack\x129\n" +
	"\tobjective\x18\x01 \x01(\v2\x1b.anduril.tasks.v2.ObjectiveR\tobjective\x12B\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2\".anduril.tasks.v2.StrikeParametersR\n" +
	"parameters\"\xb0\x02\n" +
	"\x06Strike\x129\n" +
	"\tobjective\x18\x01 \x01(\v2\x1b.anduril.tasks.v2.ObjectiveR\tobjective\x12@\n" +
	"\ringress_angle\x18\x02 \x01(\v2\x1b.anduril.tasks.v2.AnglePairR\fingressAngle\x12e\n" +
	"\x19strike_release_constraint\x18\x03 \x01(\v2).anduril.tasks.v2.StrikeReleaseConstraintR\x17strikeReleaseConstraint\x12B\n" +
	"\n" +
	"parameters\x18\x04 \x01(\v2\".anduril.tasks.v2.StrikeParametersR\n" +
	"parameters\"~\n" +
	"\x17StrikeReleaseConstraint\x12F\n" +
	"\frelease_area\x18\x01 \x01(\v2!.anduril.tasks.v2.AreaConstraintsH\x00R\vreleaseAreaB\x1b\n" +
	"\x19strike_release_constraint\"\x85\x02\n" +
	"\x10StrikeParameters\x12T\n" +
	"\x12payloads_to_employ\x18\x01 \x03(\v2&.anduril.tasks.v2.PayloadConfigurationR\x10payloadsToEmploy\x12I\n" +
	"\x13desired_impact_time\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11desiredImpactTime\x12$\n" +
	"\x0erun_in_bearing\x18\x03 \x01(\x01R\frunInBearing\x12*\n" +
	"\x11glide_slope_angle\x18\x04 \x01(\x01R\x0fglideSlopeAngle\"W\n" +
	"\x14PayloadConfiguration\x12#\n" +
	"\rcapability_id\x18\x01 \x01(\tR\fcapabilityId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"\xe8\x01\n" +
	"\x0eReleasePayload\x12B\n" +
	"\bpayloads\x18\x01 \x03(\v2&.anduril.tasks.v2.PayloadConfigurationR\bpayloads\x129\n" +
	"\tobjective\x18\x02 \x01(\v2\x1b.anduril.tasks.v2.ObjectiveR\tobjective\x12E\n" +
	"\x11precision_release\x18\x03 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x10precisionReleaseB\x10\n" +
	"\x0erelease_methodB\xcf\x01\n" +
	"\x14com.anduril.tasks.v2B\x0eStrikePubProtoP\x01ZEgithub.com/anduril/lattice-sdk-go/src/anduril/tasks/v2/shared;tasksv2\xa2\x02\x03ATX\xaa\x02\x10Anduril.Tasks.V2\xca\x02\x10Anduril\\Tasks\\V2\xe2\x02\x1cAnduril\\Tasks\\V2\\GPBMetadata\xea\x02\x12Anduril::Tasks::V2b\x06proto3"

var (
	file_anduril_tasks_v2_shared_strike_pub_proto_rawDescOnce sync.Once
	file_anduril_tasks_v2_shared_strike_pub_proto_rawDescData []byte
)

func file_anduril_tasks_v2_shared_strike_pub_proto_rawDescGZIP() []byte {
	file_anduril_tasks_v2_shared_strike_pub_proto_rawDescOnce.Do(func() {
		file_anduril_tasks_v2_shared_strike_pub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anduril_tasks_v2_shared_strike_pub_proto_rawDesc), len(file_anduril_tasks_v2_shared_strike_pub_proto_rawDesc)))
	})
	return file_anduril_tasks_v2_shared_strike_pub_proto_rawDescData
}

var file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_anduril_tasks_v2_shared_strike_pub_proto_goTypes = []any{
	(*Smack)(nil),                   // 0: anduril.tasks.v2.Smack
	(*Strike)(nil),                  // 1: anduril.tasks.v2.Strike
	(*StrikeReleaseConstraint)(nil), // 2: anduril.tasks.v2.StrikeReleaseConstraint
	(*StrikeParameters)(nil),        // 3: anduril.tasks.v2.StrikeParameters
	(*PayloadConfiguration)(nil),    // 4: anduril.tasks.v2.PayloadConfiguration
	(*ReleasePayload)(nil),          // 5: anduril.tasks.v2.ReleasePayload
	(*v2.Objective)(nil),            // 6: anduril.tasks.v2.Objective
	(*v2.AnglePair)(nil),            // 7: anduril.tasks.v2.AnglePair
	(*v2.AreaConstraints)(nil),      // 8: anduril.tasks.v2.AreaConstraints
	(*durationpb.Duration)(nil),     // 9: google.protobuf.Duration
	(*emptypb.Empty)(nil),           // 10: google.protobuf.Empty
}
var file_anduril_tasks_v2_shared_strike_pub_proto_depIdxs = []int32{
	6,  // 0: anduril.tasks.v2.Smack.objective:type_name -> anduril.tasks.v2.Objective
	3,  // 1: anduril.tasks.v2.Smack.parameters:type_name -> anduril.tasks.v2.StrikeParameters
	6,  // 2: anduril.tasks.v2.Strike.objective:type_name -> anduril.tasks.v2.Objective
	7,  // 3: anduril.tasks.v2.Strike.ingress_angle:type_name -> anduril.tasks.v2.AnglePair
	2,  // 4: anduril.tasks.v2.Strike.strike_release_constraint:type_name -> anduril.tasks.v2.StrikeReleaseConstraint
	3,  // 5: anduril.tasks.v2.Strike.parameters:type_name -> anduril.tasks.v2.StrikeParameters
	8,  // 6: anduril.tasks.v2.StrikeReleaseConstraint.release_area:type_name -> anduril.tasks.v2.AreaConstraints
	4,  // 7: anduril.tasks.v2.StrikeParameters.payloads_to_employ:type_name -> anduril.tasks.v2.PayloadConfiguration
	9,  // 8: anduril.tasks.v2.StrikeParameters.desired_impact_time:type_name -> google.protobuf.Duration
	4,  // 9: anduril.tasks.v2.ReleasePayload.payloads:type_name -> anduril.tasks.v2.PayloadConfiguration
	6,  // 10: anduril.tasks.v2.ReleasePayload.objective:type_name -> anduril.tasks.v2.Objective
	10, // 11: anduril.tasks.v2.ReleasePayload.precision_release:type_name -> google.protobuf.Empty
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_anduril_tasks_v2_shared_strike_pub_proto_init() }
func file_anduril_tasks_v2_shared_strike_pub_proto_init() {
	if File_anduril_tasks_v2_shared_strike_pub_proto != nil {
		return
	}
	file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[2].OneofWrappers = []any{
		(*StrikeReleaseConstraint_ReleaseArea)(nil),
	}
	file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes[5].OneofWrappers = []any{
		(*ReleasePayload_PrecisionRelease)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anduril_tasks_v2_shared_strike_pub_proto_rawDesc), len(file_anduril_tasks_v2_shared_strike_pub_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_tasks_v2_shared_strike_pub_proto_goTypes,
		DependencyIndexes: file_anduril_tasks_v2_shared_strike_pub_proto_depIdxs,
		MessageInfos:      file_anduril_tasks_v2_shared_strike_pub_proto_msgTypes,
	}.Build()
	File_anduril_tasks_v2_shared_strike_pub_proto = out.File
	file_anduril_tasks_v2_shared_strike_pub_proto_goTypes = nil
	file_anduril_tasks_v2_shared_strike_pub_proto_depIdxs = nil
}
