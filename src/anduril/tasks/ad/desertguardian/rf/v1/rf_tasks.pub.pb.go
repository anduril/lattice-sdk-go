// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: anduril/tasks/ad/desertguardian/rf/v1/rf_tasks.pub.proto

package rfv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransmitState int32

const (
	TransmitState_TRANSMIT_STATE_INVALID          TransmitState = 0
	TransmitState_TRANSMIT_STATE_TRANSMITTING     TransmitState = 1
	TransmitState_TRANSMIT_STATE_NOT_TRANSMITTING TransmitState = 2
)

// Enum value maps for TransmitState.
var (
	TransmitState_name = map[int32]string{
		0: "TRANSMIT_STATE_INVALID",
		1: "TRANSMIT_STATE_TRANSMITTING",
		2: "TRANSMIT_STATE_NOT_TRANSMITTING",
	}
	TransmitState_value = map[string]int32{
		"TRANSMIT_STATE_INVALID":          0,
		"TRANSMIT_STATE_TRANSMITTING":     1,
		"TRANSMIT_STATE_NOT_TRANSMITTING": 2,
	}
)

func (x TransmitState) Enum() *TransmitState {
	p := new(TransmitState)
	*p = x
	return p
}

func (x TransmitState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransmitState) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes[0].Descriptor()
}

func (TransmitState) Type() protoreflect.EnumType {
	return &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes[0]
}

func (x TransmitState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransmitState.Descriptor instead.
func (TransmitState) EnumDescriptor() ([]byte, []int) {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP(), []int{0}
}

type SurveillanceState int32

const (
	SurveillanceState_SURVEILLANCE_STATE_INVALID         SurveillanceState = 0
	SurveillanceState_SURVEILLANCE_STATE_SURVEILLING     SurveillanceState = 1
	SurveillanceState_SURVEILLANCE_STATE_NOT_SURVEILLING SurveillanceState = 2
)

// Enum value maps for SurveillanceState.
var (
	SurveillanceState_name = map[int32]string{
		0: "SURVEILLANCE_STATE_INVALID",
		1: "SURVEILLANCE_STATE_SURVEILLING",
		2: "SURVEILLANCE_STATE_NOT_SURVEILLING",
	}
	SurveillanceState_value = map[string]int32{
		"SURVEILLANCE_STATE_INVALID":         0,
		"SURVEILLANCE_STATE_SURVEILLING":     1,
		"SURVEILLANCE_STATE_NOT_SURVEILLING": 2,
	}
)

func (x SurveillanceState) Enum() *SurveillanceState {
	p := new(SurveillanceState)
	*p = x
	return p
}

func (x SurveillanceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SurveillanceState) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes[1].Descriptor()
}

func (SurveillanceState) Type() protoreflect.EnumType {
	return &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes[1]
}

func (x SurveillanceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SurveillanceState.Descriptor instead.
func (SurveillanceState) EnumDescriptor() ([]byte, []int) {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP(), []int{1}
}

type EmissionControlState int32

const (
	EmissionControlState_EMISSION_CONTROL_STATE_INVALID     EmissionControlState = 0
	EmissionControlState_EMISSION_CONTROL_STATE_ALLOWED     EmissionControlState = 1
	EmissionControlState_EMISSION_CONTROL_STATE_NOT_ALLOWED EmissionControlState = 2
)

// Enum value maps for EmissionControlState.
var (
	EmissionControlState_name = map[int32]string{
		0: "EMISSION_CONTROL_STATE_INVALID",
		1: "EMISSION_CONTROL_STATE_ALLOWED",
		2: "EMISSION_CONTROL_STATE_NOT_ALLOWED",
	}
	EmissionControlState_value = map[string]int32{
		"EMISSION_CONTROL_STATE_INVALID":     0,
		"EMISSION_CONTROL_STATE_ALLOWED":     1,
		"EMISSION_CONTROL_STATE_NOT_ALLOWED": 2,
	}
)

func (x EmissionControlState) Enum() *EmissionControlState {
	p := new(EmissionControlState)
	*p = x
	return p
}

func (x EmissionControlState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmissionControlState) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes[2].Descriptor()
}

func (EmissionControlState) Type() protoreflect.EnumType {
	return &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes[2]
}

func (x EmissionControlState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmissionControlState.Descriptor instead.
func (EmissionControlState) EnumDescriptor() ([]byte, []int) {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP(), []int{2}
}

// Set the transmit state of an RF Platform such as a Radar, Beacon, or Radio.
type SetTransmitState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransmitState TransmitState `protobuf:"varint,1,opt,name=transmit_state,json=transmitState,proto3,enum=anduril.tasks.ad.desertguardian.rf.v1.TransmitState" json:"transmit_state,omitempty"`
}

func (x *SetTransmitState) Reset() {
	*x = SetTransmitState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTransmitState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTransmitState) ProtoMessage() {}

func (x *SetTransmitState) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTransmitState.ProtoReflect.Descriptor instead.
func (*SetTransmitState) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP(), []int{0}
}

func (x *SetTransmitState) GetTransmitState() TransmitState {
	if x != nil {
		return x.TransmitState
	}
	return TransmitState_TRANSMIT_STATE_INVALID
}

// Set the surveillance state of a passive (listen-only) RF Platform.
type SetSurveillanceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveillanceState SurveillanceState `protobuf:"varint,1,opt,name=surveillance_state,json=surveillanceState,proto3,enum=anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState" json:"surveillance_state,omitempty"`
}

func (x *SetSurveillanceState) Reset() {
	*x = SetSurveillanceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSurveillanceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSurveillanceState) ProtoMessage() {}

func (x *SetSurveillanceState) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSurveillanceState.ProtoReflect.Descriptor instead.
func (*SetSurveillanceState) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP(), []int{1}
}

func (x *SetSurveillanceState) GetSurveillanceState() SurveillanceState {
	if x != nil {
		return x.SurveillanceState
	}
	return SurveillanceState_SURVEILLANCE_STATE_INVALID
}

// Set whether or not an RF Platform has Emmission Control (EmCon).
// If supported, RF platforms should only expose the SetTransmitState task when EmissionControlState is EMISSION_CONTROL_STATE_ALLOWED.
// When in EMISSION_CONTROL_STATE_NOT_ALLOWED, the Platform should be in TRANSMIT_STATE_NOT_TRANSMITTING, and should remove SetTransmitState from the task Catalog.
type SetEmissionControlState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmconState EmissionControlState `protobuf:"varint,1,opt,name=emcon_state,json=emconState,proto3,enum=anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState" json:"emcon_state,omitempty"`
}

func (x *SetEmissionControlState) Reset() {
	*x = SetEmissionControlState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEmissionControlState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEmissionControlState) ProtoMessage() {}

func (x *SetEmissionControlState) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEmissionControlState.ProtoReflect.Descriptor instead.
func (*SetEmissionControlState) Descriptor() ([]byte, []int) {
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP(), []int{2}
}

func (x *SetEmissionControlState) GetEmconState() EmissionControlState {
	if x != nil {
		return x.EmconState
	}
	return EmissionControlState_EMISSION_CONTROL_STATE_INVALID
}

var File_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto protoreflect.FileDescriptor

var file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDesc = []byte{
	0x0a, 0x38, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f,
	0x61, 0x64, 0x2f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61,
	0x6e, 0x2f, 0x72, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x66, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x61, 0x6e, 0x64, 0x75,
	0x72, 0x69, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x61, 0x64, 0x2e, 0x64, 0x65, 0x73,
	0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x2e, 0x72, 0x66, 0x2e, 0x76,
	0x31, 0x22, 0x6f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x61, 0x64,
	0x2e, 0x64, 0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x2e,
	0x72, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x7f, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x69, 0x6c,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x73, 0x75,
	0x72, 0x76, 0x65, 0x69, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x61, 0x64, 0x2e, 0x64, 0x65, 0x73, 0x65, 0x72, 0x74,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x2e, 0x72, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x72, 0x76, 0x65, 0x69, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x11, 0x73, 0x75, 0x72, 0x76, 0x65, 0x69, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x77, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5c,
	0x0a, 0x0b, 0x65, 0x6d, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x2e, 0x61, 0x64, 0x2e, 0x64, 0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x69, 0x61, 0x6e, 0x2e, 0x72, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0a, 0x65, 0x6d, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x71, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4d, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x4d, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x4d, 0x49, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x4d, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4d, 0x49, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a,
	0x7f, 0x0a, 0x11, 0x53, 0x75, 0x72, 0x76, 0x65, 0x69, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x55, 0x52, 0x56, 0x45, 0x49, 0x4c, 0x4c,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x55, 0x52, 0x56, 0x45, 0x49, 0x4c, 0x4c,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x52, 0x56, 0x45,
	0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x55, 0x52, 0x56,
	0x45, 0x49, 0x4c, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x55, 0x52, 0x56, 0x45, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x2a, 0x86, 0x01, 0x0a, 0x14, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a,
	0x1e, 0x45, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x02, 0x42, 0xc5, 0x02, 0x0a, 0x29, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x61, 0x64, 0x2e, 0x64, 0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61,
	0x6e, 0x2e, 0x72, 0x66, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x52, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x50, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x61,
	0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x61, 0x6e,
	0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x61, 0x64, 0x2f, 0x64,
	0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x2f, 0x72, 0x66,
	0x2f, 0x76, 0x31, 0x3b, 0x72, 0x66, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x41, 0x54, 0x41, 0x44, 0x52,
	0xaa, 0x02, 0x25, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x41, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69,
	0x61, 0x6e, 0x2e, 0x52, 0x66, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x25, 0x41, 0x6e, 0x64, 0x75, 0x72,
	0x69, 0x6c, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x5c, 0x41, 0x64, 0x5c, 0x44, 0x65, 0x73, 0x65,
	0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x5c, 0x52, 0x66, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x31, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x5c, 0x41, 0x64, 0x5c, 0x44, 0x65, 0x73, 0x65, 0x72, 0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69,
	0x61, 0x6e, 0x5c, 0x52, 0x66, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x2a, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x3a, 0x3a,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x3a, 0x3a, 0x41, 0x64, 0x3a, 0x3a, 0x44, 0x65, 0x73, 0x65, 0x72,
	0x74, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x3a, 0x3a, 0x52, 0x66, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescOnce sync.Once
	file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescData = file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDesc
)

func file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescGZIP() []byte {
	file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescOnce.Do(func() {
		file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescData = protoimpl.X.CompressGZIP(file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescData)
	})
	return file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDescData
}

var file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_goTypes = []any{
	(TransmitState)(0),              // 0: anduril.tasks.ad.desertguardian.rf.v1.TransmitState
	(SurveillanceState)(0),          // 1: anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState
	(EmissionControlState)(0),       // 2: anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState
	(*SetTransmitState)(nil),        // 3: anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState
	(*SetSurveillanceState)(nil),    // 4: anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState
	(*SetEmissionControlState)(nil), // 5: anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState
}
var file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_depIdxs = []int32{
	0, // 0: anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState.transmit_state:type_name -> anduril.tasks.ad.desertguardian.rf.v1.TransmitState
	1, // 1: anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState.surveillance_state:type_name -> anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState
	2, // 2: anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState.emcon_state:type_name -> anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_init() }
func file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_init() {
	if File_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SetTransmitState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SetSurveillanceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SetEmissionControlState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_goTypes,
		DependencyIndexes: file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_depIdxs,
		EnumInfos:         file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_enumTypes,
		MessageInfos:      file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_msgTypes,
	}.Build()
	File_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto = out.File
	file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_rawDesc = nil
	file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_goTypes = nil
	file_anduril_tasks_ad_desertguardian_rf_v1_rf_tasks_pub_proto_depIdxs = nil
}
