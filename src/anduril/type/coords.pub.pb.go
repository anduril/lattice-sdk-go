// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: anduril/type/coords.pub.proto

package _type

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// What altitude of zero refers to.
type LLA_AltitudeReference int32

const (
	// Depending on the context its possible INVALID just means that it is
	// clear from the context (e.g. this is LLA is named lla_hae).
	// This also might mean AGL which would depend on what height map you are
	// using.
	LLA_ALTITUDE_REFERENCE_INVALID            LLA_AltitudeReference = 0
	LLA_ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84 LLA_AltitudeReference = 1 // commonly called height above ellipsoid (HAE)
	LLA_ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96 LLA_AltitudeReference = 2 // commonly called mean sea level (MSL)
	LLA_ALTITUDE_REFERENCE_UNKNOWN            LLA_AltitudeReference = 3 // Publishing an altitude with an unkown reference
	LLA_ALTITUDE_REFERENCE_BAROMETRIC         LLA_AltitudeReference = 4 // ADSB sometimes published barometrically-measured alt
	LLA_ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR    LLA_AltitudeReference = 5 // Positive distance above sea floor (ASF) at a specific lat/lon
	LLA_ALTITUDE_REFERENCE_BELOW_SEA_SURFACE  LLA_AltitudeReference = 6 // Positive distance below surface at a specific lat/lon
)

// Enum value maps for LLA_AltitudeReference.
var (
	LLA_AltitudeReference_name = map[int32]string{
		0: "ALTITUDE_REFERENCE_INVALID",
		1: "ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84",
		2: "ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96",
		3: "ALTITUDE_REFERENCE_UNKNOWN",
		4: "ALTITUDE_REFERENCE_BAROMETRIC",
		5: "ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR",
		6: "ALTITUDE_REFERENCE_BELOW_SEA_SURFACE",
	}
	LLA_AltitudeReference_value = map[string]int32{
		"ALTITUDE_REFERENCE_INVALID":            0,
		"ALTITUDE_REFERENCE_HEIGHT_ABOVE_WGS84": 1,
		"ALTITUDE_REFERENCE_HEIGHT_ABOVE_EGM96": 2,
		"ALTITUDE_REFERENCE_UNKNOWN":            3,
		"ALTITUDE_REFERENCE_BAROMETRIC":         4,
		"ALTITUDE_REFERENCE_ABOVE_SEA_FLOOR":    5,
		"ALTITUDE_REFERENCE_BELOW_SEA_SURFACE":  6,
	}
)

func (x LLA_AltitudeReference) Enum() *LLA_AltitudeReference {
	p := new(LLA_AltitudeReference)
	*p = x
	return p
}

func (x LLA_AltitudeReference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLA_AltitudeReference) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_type_coords_pub_proto_enumTypes[0].Descriptor()
}

func (LLA_AltitudeReference) Type() protoreflect.EnumType {
	return &file_anduril_type_coords_pub_proto_enumTypes[0]
}

func (x LLA_AltitudeReference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLA_AltitudeReference.Descriptor instead.
func (LLA_AltitudeReference) EnumDescriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{1, 0}
}

// Spherical angular coordinates
type ThetaPhi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Angle clockwise relative to forward in degrees (Azimuth).
	Theta float64 `protobuf:"fixed64,1,opt,name=theta,proto3" json:"theta,omitempty"`
	// Angle upward relative to forward in degrees (Elevation).
	Phi float64 `protobuf:"fixed64,2,opt,name=phi,proto3" json:"phi,omitempty"`
}

func (x *ThetaPhi) Reset() {
	*x = ThetaPhi{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThetaPhi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThetaPhi) ProtoMessage() {}

func (x *ThetaPhi) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThetaPhi.ProtoReflect.Descriptor instead.
func (*ThetaPhi) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{0}
}

func (x *ThetaPhi) GetTheta() float64 {
	if x != nil {
		return x.Theta
	}
	return 0
}

func (x *ThetaPhi) GetPhi() float64 {
	if x != nil {
		return x.Phi
	}
	return 0
}

type LLA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lon  float64 `protobuf:"fixed64,1,opt,name=lon,proto3" json:"lon,omitempty"`  // WGS84 longitude in decimal degrees
	Lat  float64 `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`  // WGS84 geodetic latitude in decimal degrees
	Alt  float64 `protobuf:"fixed64,3,opt,name=alt,proto3" json:"alt,omitempty"`  // altitude in meters above either WGS84 or EGM96 (see altitude_reference)
	Is2D bool    `protobuf:"varint,4,opt,name=is2d,proto3" json:"is2d,omitempty"` // [default=false] indicates that altitude is either unset or so uncertain that it is meaningless
	// Meaning of alt.
	// altitude in meters above either WGS84 or EGM96, use altitude_reference to
	// determine what zero means.
	AltitudeReference LLA_AltitudeReference `protobuf:"varint,5,opt,name=altitude_reference,json=altitudeReference,proto3,enum=anduril.type.LLA_AltitudeReference" json:"altitude_reference,omitempty"`
}

func (x *LLA) Reset() {
	*x = LLA{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLA) ProtoMessage() {}

func (x *LLA) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLA.ProtoReflect.Descriptor instead.
func (*LLA) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{1}
}

func (x *LLA) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *LLA) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *LLA) GetAlt() float64 {
	if x != nil {
		return x.Alt
	}
	return 0
}

func (x *LLA) GetIs2D() bool {
	if x != nil {
		return x.Is2D
	}
	return false
}

func (x *LLA) GetAltitudeReference() LLA_AltitudeReference {
	if x != nil {
		return x.AltitudeReference
	}
	return LLA_ALTITUDE_REFERENCE_INVALID
}

type ENU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E float64 `protobuf:"fixed64,1,opt,name=e,proto3" json:"e,omitempty"`
	N float64 `protobuf:"fixed64,2,opt,name=n,proto3" json:"n,omitempty"`
	U float64 `protobuf:"fixed64,3,opt,name=u,proto3" json:"u,omitempty"`
}

func (x *ENU) Reset() {
	*x = ENU{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ENU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENU) ProtoMessage() {}

func (x *ENU) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENU.ProtoReflect.Descriptor instead.
func (*ENU) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{2}
}

func (x *ENU) GetE() float64 {
	if x != nil {
		return x.E
	}
	return 0
}

func (x *ENU) GetN() float64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *ENU) GetU() float64 {
	if x != nil {
		return x.U
	}
	return 0
}

// Holds ECI (Earth-Centered Inertial, https://en.wikipedia.org/wiki/Earth-centered_inertial)
// coordinates.
type ECI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Holds the x-coordinate of ECI.
	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	// Holds the y-coordinate of ECI.
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	// Holds the z-coordinate of ECI.
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *ECI) Reset() {
	*x = ECI{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECI) ProtoMessage() {}

func (x *ECI) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECI.ProtoReflect.Descriptor instead.
func (*ECI) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{3}
}

func (x *ECI) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ECI) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ECI) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Vec2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vec2) Reset() {
	*x = Vec2{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vec2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec2) ProtoMessage() {}

func (x *Vec2) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec2.ProtoReflect.Descriptor instead.
func (*Vec2) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{4}
}

func (x *Vec2) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec2) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Vec2F struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vec2F) Reset() {
	*x = Vec2F{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vec2F) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec2F) ProtoMessage() {}

func (x *Vec2F) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec2F.ProtoReflect.Descriptor instead.
func (*Vec2F) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{5}
}

func (x *Vec2F) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec2F) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Vec3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vec3) Reset() {
	*x = Vec3{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vec3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec3) ProtoMessage() {}

func (x *Vec3) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec3.ProtoReflect.Descriptor instead.
func (*Vec3) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{6}
}

func (x *Vec3) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec3) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vec3) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Vec3F struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vec3F) Reset() {
	*x = Vec3F{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vec3F) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec3F) ProtoMessage() {}

func (x *Vec3F) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec3F.ProtoReflect.Descriptor instead.
func (*Vec3F) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{7}
}

func (x *Vec3F) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec3F) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vec3F) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Quaternion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// x, y, z are vector portion, w is scalar
	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
	W float64 `protobuf:"fixed64,4,opt,name=w,proto3" json:"w,omitempty"`
}

func (x *Quaternion) Reset() {
	*x = Quaternion{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quaternion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quaternion) ProtoMessage() {}

func (x *Quaternion) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quaternion.ProtoReflect.Descriptor instead.
func (*Quaternion) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{8}
}

func (x *Quaternion) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Quaternion) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Quaternion) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Quaternion) GetW() float64 {
	if x != nil {
		return x.W
	}
	return 0
}

// Yaw-Pitch in radians
type YawPitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yaw   float64 `protobuf:"fixed64,1,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Pitch float64 `protobuf:"fixed64,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
}

func (x *YawPitch) Reset() {
	*x = YawPitch{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YawPitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YawPitch) ProtoMessage() {}

func (x *YawPitch) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YawPitch.ProtoReflect.Descriptor instead.
func (*YawPitch) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{9}
}

func (x *YawPitch) GetYaw() float64 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *YawPitch) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

// Yaw-Pitch-Roll in degrees.
type YPR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yaw   float64 `protobuf:"fixed64,1,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Pitch float64 `protobuf:"fixed64,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Roll  float64 `protobuf:"fixed64,3,opt,name=roll,proto3" json:"roll,omitempty"`
}

func (x *YPR) Reset() {
	*x = YPR{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YPR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YPR) ProtoMessage() {}

func (x *YPR) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YPR.ProtoReflect.Descriptor instead.
func (*YPR) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{10}
}

func (x *YPR) GetYaw() float64 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *YPR) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *YPR) GetRoll() float64 {
	if x != nil {
		return x.Roll
	}
	return 0
}

type Pose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Geospatial location defined by this Pose.
	Pos *LLA `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	// The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
	// etc and is determined by the context in which this Pose is used.
	// The normal convention for defining orientation is to list the frames of transformation, for example
	// att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
	// in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
	// field would have been att_pose_to_enu.
	//
	// Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
	// to the enu frame. Following the geometry-cpp rotation convention, the following example would be valid:
	// (https://ghe.anduril.dev/autonomy/geometry-cpp/blob/master/src/Rotation.h#L90)
	//
	// Point<Pose\> posePt{1,0,0};
	// Rotation<Enu, Pose\> attPoseToEnu{};
	// Point<Enu\> = attPoseToEnu*posePt;
	//
	// This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
	// matrix.
	//
	// An alternative matrix expression is as follows:
	// ptEnu = M x ptPose
	AttEnu *Quaternion `protobuf:"bytes,2,opt,name=att_enu,json=attEnu,proto3" json:"att_enu,omitempty"`
}

func (x *Pose) Reset() {
	*x = Pose{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pose) ProtoMessage() {}

func (x *Pose) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pose.ProtoReflect.Descriptor instead.
func (*Pose) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{11}
}

func (x *Pose) GetPos() *LLA {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Pose) GetAttEnu() *Quaternion {
	if x != nil {
		return x.AttEnu
	}
	return nil
}

type LLAPolygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// standard is that points are defined in a counter-clockwise order. this
	// is only the exterior ring of a polygon, no holes are supported.
	Points []*LLA `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *LLAPolygon) Reset() {
	*x = LLAPolygon{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLAPolygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLAPolygon) ProtoMessage() {}

func (x *LLAPolygon) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLAPolygon.ProtoReflect.Descriptor instead.
func (*LLAPolygon) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{12}
}

func (x *LLAPolygon) GetPoints() []*LLA {
	if x != nil {
		return x.Points
	}
	return nil
}

type AERPolygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Azimuth-Range-Elevation
	Points []*Spherical `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *AERPolygon) Reset() {
	*x = AERPolygon{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AERPolygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AERPolygon) ProtoMessage() {}

func (x *AERPolygon) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AERPolygon.ProtoReflect.Descriptor instead.
func (*AERPolygon) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{13}
}

func (x *AERPolygon) GetPoints() []*Spherical {
	if x != nil {
		return x.Points
	}
	return nil
}

type LLAPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ordered list of points on the path.
	Points []*LLA `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	// True if the last point on the path connects to the first in a closed
	// loop
	Loop bool `protobuf:"varint,2,opt,name=loop,proto3" json:"loop,omitempty"`
}

func (x *LLAPath) Reset() {
	*x = LLAPath{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLAPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLAPath) ProtoMessage() {}

func (x *LLAPath) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLAPath.ProtoReflect.Descriptor instead.
func (*LLAPath) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{14}
}

func (x *LLAPath) GetPoints() []*LLA {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *LLAPath) GetLoop() bool {
	if x != nil {
		return x.Loop
	}
	return false
}

type Spherical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// azimuth angle in radians
	Az float64 `protobuf:"fixed64,1,opt,name=az,proto3" json:"az,omitempty"`
	// elevation angle in radians, we'll use 0 = XY plane
	El float64 `protobuf:"fixed64,2,opt,name=el,proto3" json:"el,omitempty"`
	// range in meters
	Range float64 `protobuf:"fixed64,3,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *Spherical) Reset() {
	*x = Spherical{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spherical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spherical) ProtoMessage() {}

func (x *Spherical) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spherical.ProtoReflect.Descriptor instead.
func (*Spherical) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{15}
}

func (x *Spherical) GetAz() float64 {
	if x != nil {
		return x.Az
	}
	return 0
}

func (x *Spherical) GetEl() float64 {
	if x != nil {
		return x.El
	}
	return 0
}

func (x *Spherical) GetRange() float64 {
	if x != nil {
		return x.Range
	}
	return 0
}

type DoubleRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min float64 `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max float64 `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *DoubleRange) Reset() {
	*x = DoubleRange{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoubleRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleRange) ProtoMessage() {}

func (x *DoubleRange) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleRange.ProtoReflect.Descriptor instead.
func (*DoubleRange) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{16}
}

func (x *DoubleRange) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DoubleRange) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Uint64Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min uint64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max uint64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *Uint64Range) Reset() {
	*x = Uint64Range{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint64Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint64Range) ProtoMessage() {}

func (x *Uint64Range) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint64Range.ProtoReflect.Descriptor instead.
func (*Uint64Range) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{17}
}

func (x *Uint64Range) GetMin() uint64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Uint64Range) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

// A symmetric 4D matrix only representing the upper right triangle, useful for covariance matrices.
type TMat4F struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M00 float32 `protobuf:"fixed32,1,opt,name=m00,proto3" json:"m00,omitempty"`
	M01 float32 `protobuf:"fixed32,2,opt,name=m01,proto3" json:"m01,omitempty"`
	M02 float32 `protobuf:"fixed32,3,opt,name=m02,proto3" json:"m02,omitempty"`
	M03 float32 `protobuf:"fixed32,4,opt,name=m03,proto3" json:"m03,omitempty"`
	M11 float32 `protobuf:"fixed32,5,opt,name=m11,proto3" json:"m11,omitempty"`
	M12 float32 `protobuf:"fixed32,6,opt,name=m12,proto3" json:"m12,omitempty"`
	M13 float32 `protobuf:"fixed32,7,opt,name=m13,proto3" json:"m13,omitempty"`
	M22 float32 `protobuf:"fixed32,8,opt,name=m22,proto3" json:"m22,omitempty"`
	M23 float32 `protobuf:"fixed32,9,opt,name=m23,proto3" json:"m23,omitempty"`
	M33 float32 `protobuf:"fixed32,10,opt,name=m33,proto3" json:"m33,omitempty"`
}

func (x *TMat4F) Reset() {
	*x = TMat4F{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TMat4F) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMat4F) ProtoMessage() {}

func (x *TMat4F) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMat4F.ProtoReflect.Descriptor instead.
func (*TMat4F) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{18}
}

func (x *TMat4F) GetM00() float32 {
	if x != nil {
		return x.M00
	}
	return 0
}

func (x *TMat4F) GetM01() float32 {
	if x != nil {
		return x.M01
	}
	return 0
}

func (x *TMat4F) GetM02() float32 {
	if x != nil {
		return x.M02
	}
	return 0
}

func (x *TMat4F) GetM03() float32 {
	if x != nil {
		return x.M03
	}
	return 0
}

func (x *TMat4F) GetM11() float32 {
	if x != nil {
		return x.M11
	}
	return 0
}

func (x *TMat4F) GetM12() float32 {
	if x != nil {
		return x.M12
	}
	return 0
}

func (x *TMat4F) GetM13() float32 {
	if x != nil {
		return x.M13
	}
	return 0
}

func (x *TMat4F) GetM22() float32 {
	if x != nil {
		return x.M22
	}
	return 0
}

func (x *TMat4F) GetM23() float32 {
	if x != nil {
		return x.M23
	}
	return 0
}

func (x *TMat4F) GetM33() float32 {
	if x != nil {
		return x.M33
	}
	return 0
}

// A symmetric 3D matrix only representing the upper right triangle, useful for covariance matrices.
type TMat3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mxx float64 `protobuf:"fixed64,1,opt,name=mxx,proto3" json:"mxx,omitempty"`
	Mxy float64 `protobuf:"fixed64,2,opt,name=mxy,proto3" json:"mxy,omitempty"`
	Mxz float64 `protobuf:"fixed64,3,opt,name=mxz,proto3" json:"mxz,omitempty"`
	Myy float64 `protobuf:"fixed64,4,opt,name=myy,proto3" json:"myy,omitempty"`
	Myz float64 `protobuf:"fixed64,5,opt,name=myz,proto3" json:"myz,omitempty"`
	Mzz float64 `protobuf:"fixed64,6,opt,name=mzz,proto3" json:"mzz,omitempty"`
}

func (x *TMat3) Reset() {
	*x = TMat3{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TMat3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMat3) ProtoMessage() {}

func (x *TMat3) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMat3.ProtoReflect.Descriptor instead.
func (*TMat3) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{19}
}

func (x *TMat3) GetMxx() float64 {
	if x != nil {
		return x.Mxx
	}
	return 0
}

func (x *TMat3) GetMxy() float64 {
	if x != nil {
		return x.Mxy
	}
	return 0
}

func (x *TMat3) GetMxz() float64 {
	if x != nil {
		return x.Mxz
	}
	return 0
}

func (x *TMat3) GetMyy() float64 {
	if x != nil {
		return x.Myy
	}
	return 0
}

func (x *TMat3) GetMyz() float64 {
	if x != nil {
		return x.Myz
	}
	return 0
}

func (x *TMat3) GetMzz() float64 {
	if x != nil {
		return x.Mzz
	}
	return 0
}

// symmetric 2d matrix only representing the upper right triangle, useful for
// covariance matrices
type TMat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mxx float64 `protobuf:"fixed64,1,opt,name=mxx,proto3" json:"mxx,omitempty"`
	Mxy float64 `protobuf:"fixed64,2,opt,name=mxy,proto3" json:"mxy,omitempty"`
	Myy float64 `protobuf:"fixed64,3,opt,name=myy,proto3" json:"myy,omitempty"`
}

func (x *TMat2) Reset() {
	*x = TMat2{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TMat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMat2) ProtoMessage() {}

func (x *TMat2) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMat2.ProtoReflect.Descriptor instead.
func (*TMat2) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{20}
}

func (x *TMat2) GetMxx() float64 {
	if x != nil {
		return x.Mxx
	}
	return 0
}

func (x *TMat2) GetMxy() float64 {
	if x != nil {
		return x.Mxy
	}
	return 0
}

func (x *TMat2) GetMyy() float64 {
	if x != nil {
		return x.Myy
	}
	return 0
}

// Rx + t, Technically this is a duplicate of AffineTransform
// but Affine Transform isn't really an affine transform (since it doesn't allow
// skewing and stretching).
type RigidTransform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotation    *Quaternion `protobuf:"bytes,3,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Translation *Vec3       `protobuf:"bytes,4,opt,name=translation,proto3" json:"translation,omitempty"`
}

func (x *RigidTransform) Reset() {
	*x = RigidTransform{}
	mi := &file_anduril_type_coords_pub_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RigidTransform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RigidTransform) ProtoMessage() {}

func (x *RigidTransform) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_coords_pub_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RigidTransform.ProtoReflect.Descriptor instead.
func (*RigidTransform) Descriptor() ([]byte, []int) {
	return file_anduril_type_coords_pub_proto_rawDescGZIP(), []int{21}
}

func (x *RigidTransform) GetRotation() *Quaternion {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *RigidTransform) GetTranslation() *Vec3 {
	if x != nil {
		return x.Translation
	}
	return nil
}

var File_anduril_type_coords_pub_proto protoreflect.FileDescriptor

var file_anduril_type_coords_pub_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a,
	0x08, 0x54, 0x68, 0x65, 0x74, 0x61, 0x50, 0x68, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x68, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x68,
	0x69, 0x22, 0xc4, 0x03, 0x0a, 0x03, 0x4c, 0x4c, 0x41, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x73, 0x32, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69,
	0x73, 0x32, 0x64, 0x12, 0x52, 0x0a, 0x12, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c,
	0x4c, 0x41, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x29, 0x0a,
	0x25, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x48, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x41, 0x42, 0x4f, 0x56, 0x45,
	0x5f, 0x57, 0x47, 0x53, 0x38, 0x34, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x4c, 0x54, 0x49,
	0x54, 0x55, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x48,
	0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x41, 0x42, 0x4f, 0x56, 0x45, 0x5f, 0x45, 0x47, 0x4d, 0x39,
	0x36, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f,
	0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f,
	0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x42, 0x41, 0x52, 0x4f, 0x4d, 0x45,
	0x54, 0x52, 0x49, 0x43, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55,
	0x44, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x41, 0x42, 0x4f,
	0x56, 0x45, 0x5f, 0x53, 0x45, 0x41, 0x5f, 0x46, 0x4c, 0x4f, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x28,
	0x0a, 0x24, 0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52,
	0x45, 0x4e, 0x43, 0x45, 0x5f, 0x42, 0x45, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x45, 0x41, 0x5f, 0x53,
	0x55, 0x52, 0x46, 0x41, 0x43, 0x45, 0x10, 0x06, 0x22, 0x2f, 0x0a, 0x03, 0x45, 0x4e, 0x55, 0x12,
	0x0c, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x65, 0x12, 0x0c, 0x0a,
	0x01, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x75,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x75, 0x22, 0x2f, 0x0a, 0x03, 0x45, 0x43, 0x49,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0x22, 0x0a, 0x04, 0x56, 0x65,
	0x63, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x23,
	0x0a, 0x05, 0x56, 0x65, 0x63, 0x32, 0x66, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x79, 0x22, 0x30, 0x0a, 0x04, 0x56, 0x65, 0x63, 0x33, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0x31, 0x0a, 0x05, 0x56, 0x65, 0x63, 0x33, 0x66, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x22, 0x44, 0x0a, 0x0a, 0x51, 0x75, 0x61, 0x74,
	0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a,
	0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x77, 0x22, 0x32,
	0x0a, 0x08, 0x59, 0x61, 0x77, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x69, 0x74,
	0x63, 0x68, 0x22, 0x41, 0x0a, 0x03, 0x59, 0x50, 0x52, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x22, 0x5e, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6e, 0x64,
	0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x4c, 0x41, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x45, 0x6e, 0x75, 0x22, 0x37, 0x0a, 0x0a, 0x4c, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x4c, 0x4c, 0x41, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x3d,
	0x0a, 0x0a, 0x41, 0x45, 0x52, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x48, 0x0a,
	0x07, 0x4c, 0x4c, 0x41, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72,
	0x69, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x4c, 0x41, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x22, 0x41, 0x0a, 0x09, 0x53, 0x70, 0x68, 0x65, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x02, 0x61, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x02, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x0b, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x31, 0x0a,
	0x0b, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x61, 0x78,
	0x22, 0xbc, 0x01, 0x0a, 0x06, 0x54, 0x4d, 0x61, 0x74, 0x34, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x30, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x30, 0x30, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x30, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x30, 0x31, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x30, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x30,
	0x32, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x30, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6d, 0x30, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6d, 0x31, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x32, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x6d, 0x31, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x33, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x31, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x32, 0x32,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x32, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x32, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x32, 0x33, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x33, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x33, 0x33, 0x22,
	0x73, 0x0a, 0x05, 0x54, 0x4d, 0x61, 0x74, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x78, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x78, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x78,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x78, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x78, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x78, 0x7a, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x79, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x79, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x79, 0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x79, 0x7a, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x7a, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6d, 0x7a, 0x7a, 0x22, 0x3d, 0x0a, 0x05, 0x54, 0x4d, 0x61, 0x74, 0x32, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x78, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x78, 0x78, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x78, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x78,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x79, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6d, 0x79, 0x79, 0x22, 0x7c, 0x0a, 0x0e, 0x52, 0x69, 0x67, 0x69, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69,
	0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x56, 0x65, 0x63, 0x33, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0xa3, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69,
	0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x50, 0x75,
	0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x61, 0x6e, 0x64,
	0x75, 0x72, 0x69, 0x6c, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x61, 0x6e, 0x64, 0x75,
	0x72, 0x69, 0x6c, 0x2f, 0x74, 0x79, 0x70, 0x65, 0xa2, 0x02, 0x03, 0x41, 0x54, 0x58, 0xaa, 0x02,
	0x0c, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0xca, 0x02, 0x0c,
	0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x54, 0x79, 0x70, 0x65, 0xe2, 0x02, 0x18, 0x41,
	0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x54, 0x79, 0x70, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69,
	0x6c, 0x3a, 0x3a, 0x54, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anduril_type_coords_pub_proto_rawDescOnce sync.Once
	file_anduril_type_coords_pub_proto_rawDescData = file_anduril_type_coords_pub_proto_rawDesc
)

func file_anduril_type_coords_pub_proto_rawDescGZIP() []byte {
	file_anduril_type_coords_pub_proto_rawDescOnce.Do(func() {
		file_anduril_type_coords_pub_proto_rawDescData = protoimpl.X.CompressGZIP(file_anduril_type_coords_pub_proto_rawDescData)
	})
	return file_anduril_type_coords_pub_proto_rawDescData
}

var file_anduril_type_coords_pub_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_anduril_type_coords_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_anduril_type_coords_pub_proto_goTypes = []any{
	(LLA_AltitudeReference)(0), // 0: anduril.type.LLA.AltitudeReference
	(*ThetaPhi)(nil),           // 1: anduril.type.ThetaPhi
	(*LLA)(nil),                // 2: anduril.type.LLA
	(*ENU)(nil),                // 3: anduril.type.ENU
	(*ECI)(nil),                // 4: anduril.type.ECI
	(*Vec2)(nil),               // 5: anduril.type.Vec2
	(*Vec2F)(nil),              // 6: anduril.type.Vec2f
	(*Vec3)(nil),               // 7: anduril.type.Vec3
	(*Vec3F)(nil),              // 8: anduril.type.Vec3f
	(*Quaternion)(nil),         // 9: anduril.type.Quaternion
	(*YawPitch)(nil),           // 10: anduril.type.YawPitch
	(*YPR)(nil),                // 11: anduril.type.YPR
	(*Pose)(nil),               // 12: anduril.type.Pose
	(*LLAPolygon)(nil),         // 13: anduril.type.LLAPolygon
	(*AERPolygon)(nil),         // 14: anduril.type.AERPolygon
	(*LLAPath)(nil),            // 15: anduril.type.LLAPath
	(*Spherical)(nil),          // 16: anduril.type.Spherical
	(*DoubleRange)(nil),        // 17: anduril.type.DoubleRange
	(*Uint64Range)(nil),        // 18: anduril.type.Uint64Range
	(*TMat4F)(nil),             // 19: anduril.type.TMat4f
	(*TMat3)(nil),              // 20: anduril.type.TMat3
	(*TMat2)(nil),              // 21: anduril.type.TMat2
	(*RigidTransform)(nil),     // 22: anduril.type.RigidTransform
}
var file_anduril_type_coords_pub_proto_depIdxs = []int32{
	0,  // 0: anduril.type.LLA.altitude_reference:type_name -> anduril.type.LLA.AltitudeReference
	2,  // 1: anduril.type.Pose.pos:type_name -> anduril.type.LLA
	9,  // 2: anduril.type.Pose.att_enu:type_name -> anduril.type.Quaternion
	2,  // 3: anduril.type.LLAPolygon.points:type_name -> anduril.type.LLA
	16, // 4: anduril.type.AERPolygon.points:type_name -> anduril.type.Spherical
	2,  // 5: anduril.type.LLAPath.points:type_name -> anduril.type.LLA
	9,  // 6: anduril.type.RigidTransform.rotation:type_name -> anduril.type.Quaternion
	7,  // 7: anduril.type.RigidTransform.translation:type_name -> anduril.type.Vec3
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_anduril_type_coords_pub_proto_init() }
func file_anduril_type_coords_pub_proto_init() {
	if File_anduril_type_coords_pub_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anduril_type_coords_pub_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_type_coords_pub_proto_goTypes,
		DependencyIndexes: file_anduril_type_coords_pub_proto_depIdxs,
		EnumInfos:         file_anduril_type_coords_pub_proto_enumTypes,
		MessageInfos:      file_anduril_type_coords_pub_proto_msgTypes,
	}.Build()
	File_anduril_type_coords_pub_proto = out.File
	file_anduril_type_coords_pub_proto_rawDesc = nil
	file_anduril_type_coords_pub_proto_goTypes = nil
	file_anduril_type_coords_pub_proto_depIdxs = nil
}
