// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: anduril/type/color.pub.proto

package _type

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Color struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The amount of red in the color as a value in the interval [0, 1].
	Red float32 `protobuf:"fixed32,1,opt,name=red,proto3" json:"red,omitempty"`
	// The amount of green in the color as a value in the interval [0, 1].
	Green float32 `protobuf:"fixed32,2,opt,name=green,proto3" json:"green,omitempty"`
	// The amount of blue in the color as a value in the interval [0, 1].
	Blue float32 `protobuf:"fixed32,3,opt,name=blue,proto3" json:"blue,omitempty"`
	// The fraction of this color that should be applied to the pixel. That is,
	// the final pixel color is defined by the equation:
	//
	// `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)`
	//
	// This means that a value of 1.0 corresponds to a solid color, whereas
	// a value of 0.0 corresponds to a completely transparent color. This
	// uses a wrapper message rather than a simple float scalar so that it is
	// possible to distinguish between a default value and the value being unset.
	// If omitted, this color object is rendered as a solid color
	// (as if the alpha value had been explicitly given a value of 1.0).
	Alpha         *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=alpha,proto3" json:"alpha,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Color) Reset() {
	*x = Color{}
	mi := &file_anduril_type_color_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_type_color_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_anduril_type_color_pub_proto_rawDescGZIP(), []int{0}
}

func (x *Color) GetRed() float32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *Color) GetGreen() float32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *Color) GetBlue() float32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *Color) GetAlpha() *wrapperspb.FloatValue {
	if x != nil {
		return x.Alpha
	}
	return nil
}

var File_anduril_type_color_pub_proto protoreflect.FileDescriptor

const file_anduril_type_color_pub_proto_rawDesc = "" +
	"\n" +
	"\x1canduril/type/color.pub.proto\x12\fanduril.type\x1a\x1egoogle/protobuf/wrappers.proto\"v\n" +
	"\x05Color\x12\x10\n" +
	"\x03red\x18\x01 \x01(\x02R\x03red\x12\x14\n" +
	"\x05green\x18\x02 \x01(\x02R\x05green\x12\x12\n" +
	"\x04blue\x18\x03 \x01(\x02R\x04blue\x121\n" +
	"\x05alpha\x18\x04 \x01(\v2\x1b.google.protobuf.FloatValueR\x05alphaB\xa6\x01\n" +
	"\x10com.anduril.typeB\rColorPubProtoP\x01Z2github.com/anduril/lattice-sdk-go/src/anduril/type\xa2\x02\x03ATX\xaa\x02\fAnduril.Type\xca\x02\fAnduril\\Type\xe2\x02\x18Anduril\\Type\\GPBMetadata\xea\x02\rAnduril::Typeb\x06proto3"

var (
	file_anduril_type_color_pub_proto_rawDescOnce sync.Once
	file_anduril_type_color_pub_proto_rawDescData []byte
)

func file_anduril_type_color_pub_proto_rawDescGZIP() []byte {
	file_anduril_type_color_pub_proto_rawDescOnce.Do(func() {
		file_anduril_type_color_pub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anduril_type_color_pub_proto_rawDesc), len(file_anduril_type_color_pub_proto_rawDesc)))
	})
	return file_anduril_type_color_pub_proto_rawDescData
}

var file_anduril_type_color_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_anduril_type_color_pub_proto_goTypes = []any{
	(*Color)(nil),                 // 0: anduril.type.Color
	(*wrapperspb.FloatValue)(nil), // 1: google.protobuf.FloatValue
}
var file_anduril_type_color_pub_proto_depIdxs = []int32{
	1, // 0: anduril.type.Color.alpha:type_name -> google.protobuf.FloatValue
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_anduril_type_color_pub_proto_init() }
func file_anduril_type_color_pub_proto_init() {
	if File_anduril_type_color_pub_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anduril_type_color_pub_proto_rawDesc), len(file_anduril_type_color_pub_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_type_color_pub_proto_goTypes,
		DependencyIndexes: file_anduril_type_color_pub_proto_depIdxs,
		MessageInfos:      file_anduril_type_color_pub_proto_msgTypes,
	}.Build()
	File_anduril_type_color_pub_proto = out.File
	file_anduril_type_color_pub_proto_goTypes = nil
	file_anduril_type_color_pub_proto_depIdxs = nil
}
