// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: anduril/entitymanager/v1/filter_dynamic.pub.proto

package entitymanagerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A DynamicStatement is the building block of a "runtime aware" entity filter - that is, any filter
// which needs to perform operations against a series of entities that will need to be evaluated against
// on demand. The DynamicStatement allows you to perform a set intersection operation across a static
// set of entities dictated by a filter, and a dynamic set of entities dictated by a selector statement.
//
// For example, the expression "find me all hostile entities that reside within any assumed
// friendly geoentity" would be represented as the following dynamic statement:
//
//	DynamicStatement
//	  filter
//	    predicate
//	      field_path: mil_view.disposition
//	      comparator: EQUALITY
//	      value: 2 // Hostile
//	  selector
//	    andOperation
//	      predicate1
//	        field_path: mil_view.disposition
//	        comparator: EQUALITY
//	        value: 4 // Assumed Friendly
//	      predicate2
//	        field_path: ontology.template
//	        comparator: EQUALITY
//	        value: 4 // Template Geo
//	  comparator
//	    IntersectionComparator
//	      WithinComparison
type DynamicStatement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The filter statement is used to determine which entities can be compared to the dynamic series
	// of entities aggregated by the selector statement.
	Filter *Statement `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// The selector statement is used to determine which entities should be a part of dynamically
	// changing set. The selector should be reevaluated as entites are created or deleted.
	Selector *Statement `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
	// The comparator specifies how the set intersection operation will be performed.
	Comparator    *IntersectionComparator `protobuf:"bytes,3,opt,name=comparator,proto3" json:"comparator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicStatement) Reset() {
	*x = DynamicStatement{}
	mi := &file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicStatement) ProtoMessage() {}

func (x *DynamicStatement) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicStatement.ProtoReflect.Descriptor instead.
func (*DynamicStatement) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescGZIP(), []int{0}
}

func (x *DynamicStatement) GetFilter() *Statement {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DynamicStatement) GetSelector() *Statement {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *DynamicStatement) GetComparator() *IntersectionComparator {
	if x != nil {
		return x.Comparator
	}
	return nil
}

// The IntersectionComparator determines what entities and what fields to respect within a set during
// a set intersection operation.
type IntersectionComparator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Comparison:
	//
	//	*IntersectionComparator_WithinComparison
	Comparison    isIntersectionComparator_Comparison `protobuf_oneof:"comparison"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntersectionComparator) Reset() {
	*x = IntersectionComparator{}
	mi := &file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntersectionComparator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntersectionComparator) ProtoMessage() {}

func (x *IntersectionComparator) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntersectionComparator.ProtoReflect.Descriptor instead.
func (*IntersectionComparator) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescGZIP(), []int{1}
}

func (x *IntersectionComparator) GetComparison() isIntersectionComparator_Comparison {
	if x != nil {
		return x.Comparison
	}
	return nil
}

func (x *IntersectionComparator) GetWithinComparison() *WithinComparison {
	if x != nil {
		if x, ok := x.Comparison.(*IntersectionComparator_WithinComparison); ok {
			return x.WithinComparison
		}
	}
	return nil
}

type isIntersectionComparator_Comparison interface {
	isIntersectionComparator_Comparison()
}

type IntersectionComparator_WithinComparison struct {
	WithinComparison *WithinComparison `protobuf:"bytes,1,opt,name=within_comparison,json=withinComparison,proto3,oneof"`
}

func (*IntersectionComparator_WithinComparison) isIntersectionComparator_Comparison() {}

// The WithinComparison implicitly will understand how to determine which entitites reside
// within other geo-shaped entities. This comparison is being left empty, but as a proto, to
// support future expansions of the within comparison (eg; within range of a static distance).
type WithinComparison struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithinComparison) Reset() {
	*x = WithinComparison{}
	mi := &file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithinComparison) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithinComparison) ProtoMessage() {}

func (x *WithinComparison) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithinComparison.ProtoReflect.Descriptor instead.
func (*WithinComparison) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescGZIP(), []int{2}
}

var File_anduril_entitymanager_v1_filter_dynamic_pub_proto protoreflect.FileDescriptor

var file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDesc = []byte{
	0x0a, 0x31, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x61,
	0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x81, 0x01,
	0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68,
	0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f,
	0x6e, 0x22, 0x12, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x69, 0x73, 0x6f, 0x6e, 0x42, 0x87, 0x02, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e,
	0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x15, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x64, 0x75,
	0x72, 0x69, 0x6c, 0x2f, 0x6c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x41, 0x45, 0x58, 0xaa, 0x02, 0x18, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x18, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24, 0x41, 0x6e,
	0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x1a, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x3a, 0x3a, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescOnce sync.Once
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescData = file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDesc
)

func file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescGZIP() []byte {
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescOnce.Do(func() {
		file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescData = protoimpl.X.CompressGZIP(file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescData)
	})
	return file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDescData
}

var file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_anduril_entitymanager_v1_filter_dynamic_pub_proto_goTypes = []any{
	(*DynamicStatement)(nil),       // 0: anduril.entitymanager.v1.DynamicStatement
	(*IntersectionComparator)(nil), // 1: anduril.entitymanager.v1.IntersectionComparator
	(*WithinComparison)(nil),       // 2: anduril.entitymanager.v1.WithinComparison
	(*Statement)(nil),              // 3: anduril.entitymanager.v1.Statement
}
var file_anduril_entitymanager_v1_filter_dynamic_pub_proto_depIdxs = []int32{
	3, // 0: anduril.entitymanager.v1.DynamicStatement.filter:type_name -> anduril.entitymanager.v1.Statement
	3, // 1: anduril.entitymanager.v1.DynamicStatement.selector:type_name -> anduril.entitymanager.v1.Statement
	1, // 2: anduril.entitymanager.v1.DynamicStatement.comparator:type_name -> anduril.entitymanager.v1.IntersectionComparator
	2, // 3: anduril.entitymanager.v1.IntersectionComparator.within_comparison:type_name -> anduril.entitymanager.v1.WithinComparison
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_anduril_entitymanager_v1_filter_dynamic_pub_proto_init() }
func file_anduril_entitymanager_v1_filter_dynamic_pub_proto_init() {
	if File_anduril_entitymanager_v1_filter_dynamic_pub_proto != nil {
		return
	}
	file_anduril_entitymanager_v1_filter_pub_proto_init()
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes[1].OneofWrappers = []any{
		(*IntersectionComparator_WithinComparison)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_entitymanager_v1_filter_dynamic_pub_proto_goTypes,
		DependencyIndexes: file_anduril_entitymanager_v1_filter_dynamic_pub_proto_depIdxs,
		MessageInfos:      file_anduril_entitymanager_v1_filter_dynamic_pub_proto_msgTypes,
	}.Build()
	File_anduril_entitymanager_v1_filter_dynamic_pub_proto = out.File
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_rawDesc = nil
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_goTypes = nil
	file_anduril_entitymanager_v1_filter_dynamic_pub_proto_depIdxs = nil
}
