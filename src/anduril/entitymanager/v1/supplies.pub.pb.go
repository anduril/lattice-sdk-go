// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: anduril/entitymanager/v1/supplies.pub.proto

package entitymanagerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the state of supplies associated with an entity (available but not in condition to use immediately)
type Supplies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fuel          []*Fuel                `protobuf:"bytes,2,rep,name=fuel,proto3" json:"fuel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Supplies) Reset() {
	*x = Supplies{}
	mi := &file_anduril_entitymanager_v1_supplies_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Supplies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supplies) ProtoMessage() {}

func (x *Supplies) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_supplies_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supplies.ProtoReflect.Descriptor instead.
func (*Supplies) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_supplies_pub_proto_rawDescGZIP(), []int{0}
}

func (x *Supplies) GetFuel() []*Fuel {
	if x != nil {
		return x.Fuel
	}
	return nil
}

// Fuel describes an entity's repository of fuels stores including current amount, operational requirements, and maximum authorized capacity
type Fuel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique fuel identifier
	FuelId string `protobuf:"bytes,1,opt,name=fuel_id,json=fuelId,proto3" json:"fuel_id,omitempty"`
	// long form name of the fuel source.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// timestamp the information was reported
	ReportedDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=reported_date,json=reportedDate,proto3" json:"reported_date,omitempty"`
	// amount of gallons on hand
	AmountGallons uint32 `protobuf:"varint,4,opt,name=amount_gallons,json=amountGallons,proto3" json:"amount_gallons,omitempty"`
	// how much the asset is allowed to have available (in gallons)
	MaxAuthorizedCapacityGallons uint32 `protobuf:"varint,5,opt,name=max_authorized_capacity_gallons,json=maxAuthorizedCapacityGallons,proto3" json:"max_authorized_capacity_gallons,omitempty"`
	// minimum required for operations (in gallons)
	OperationalRequirementGallons uint32 `protobuf:"varint,6,opt,name=operational_requirement_gallons,json=operationalRequirementGallons,proto3" json:"operational_requirement_gallons,omitempty"`
	// fuel in a single asset may have different levels of classification
	// use case: fuel for a SECRET asset while diesel fuel may be UNCLASSIFIED
	DataClassification *Classification `protobuf:"bytes,7,opt,name=data_classification,json=dataClassification,proto3" json:"data_classification,omitempty"`
	// source of information
	DataSource    string `protobuf:"bytes,8,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fuel) Reset() {
	*x = Fuel{}
	mi := &file_anduril_entitymanager_v1_supplies_pub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fuel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fuel) ProtoMessage() {}

func (x *Fuel) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_supplies_pub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fuel.ProtoReflect.Descriptor instead.
func (*Fuel) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_supplies_pub_proto_rawDescGZIP(), []int{1}
}

func (x *Fuel) GetFuelId() string {
	if x != nil {
		return x.FuelId
	}
	return ""
}

func (x *Fuel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fuel) GetReportedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportedDate
	}
	return nil
}

func (x *Fuel) GetAmountGallons() uint32 {
	if x != nil {
		return x.AmountGallons
	}
	return 0
}

func (x *Fuel) GetMaxAuthorizedCapacityGallons() uint32 {
	if x != nil {
		return x.MaxAuthorizedCapacityGallons
	}
	return 0
}

func (x *Fuel) GetOperationalRequirementGallons() uint32 {
	if x != nil {
		return x.OperationalRequirementGallons
	}
	return 0
}

func (x *Fuel) GetDataClassification() *Classification {
	if x != nil {
		return x.DataClassification
	}
	return nil
}

func (x *Fuel) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

var File_anduril_entitymanager_v1_supplies_pub_proto protoreflect.FileDescriptor

const file_anduril_entitymanager_v1_supplies_pub_proto_rawDesc = "" +
	"\n" +
	"+anduril/entitymanager/v1/supplies.pub.proto\x12\x18anduril.entitymanager.v1\x1a1anduril/entitymanager/v1/classification.pub.proto\x1a*anduril/entitymanager/v1/options.pub.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"C\n" +
	"\bSupplies\x127\n" +
	"\x04fuel\x18\x02 \x03(\v2\x1e.anduril.entitymanager.v1.FuelB\x03\xc8>\x01R\x04fuel\"\xa6\x03\n" +
	"\x04Fuel\x12\x17\n" +
	"\afuel_id\x18\x01 \x01(\tR\x06fuelId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12?\n" +
	"\rreported_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\freportedDate\x12%\n" +
	"\x0eamount_gallons\x18\x04 \x01(\rR\ramountGallons\x12E\n" +
	"\x1fmax_authorized_capacity_gallons\x18\x05 \x01(\rR\x1cmaxAuthorizedCapacityGallons\x12F\n" +
	"\x1foperational_requirement_gallons\x18\x06 \x01(\rR\x1doperationalRequirementGallons\x12Y\n" +
	"\x13data_classification\x18\a \x01(\v2(.anduril.entitymanager.v1.ClassificationR\x12dataClassification\x12\x1f\n" +
	"\vdata_source\x18\b \x01(\tR\n" +
	"dataSourceB\x82\x02\n" +
	"\x1ccom.anduril.entitymanager.v1B\x10SuppliesPubProtoP\x01ZNgithub.com/anduril/lattice-sdk-go/src/anduril/entitymanager/v1;entitymanagerv1\xa2\x02\x03AEX\xaa\x02\x18Anduril.Entitymanager.V1\xca\x02\x18Anduril\\Entitymanager\\V1\xe2\x02$Anduril\\Entitymanager\\V1\\GPBMetadata\xea\x02\x1aAnduril::Entitymanager::V1b\x06proto3"

var (
	file_anduril_entitymanager_v1_supplies_pub_proto_rawDescOnce sync.Once
	file_anduril_entitymanager_v1_supplies_pub_proto_rawDescData []byte
)

func file_anduril_entitymanager_v1_supplies_pub_proto_rawDescGZIP() []byte {
	file_anduril_entitymanager_v1_supplies_pub_proto_rawDescOnce.Do(func() {
		file_anduril_entitymanager_v1_supplies_pub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anduril_entitymanager_v1_supplies_pub_proto_rawDesc), len(file_anduril_entitymanager_v1_supplies_pub_proto_rawDesc)))
	})
	return file_anduril_entitymanager_v1_supplies_pub_proto_rawDescData
}

var file_anduril_entitymanager_v1_supplies_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_anduril_entitymanager_v1_supplies_pub_proto_goTypes = []any{
	(*Supplies)(nil),              // 0: anduril.entitymanager.v1.Supplies
	(*Fuel)(nil),                  // 1: anduril.entitymanager.v1.Fuel
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*Classification)(nil),        // 3: anduril.entitymanager.v1.Classification
}
var file_anduril_entitymanager_v1_supplies_pub_proto_depIdxs = []int32{
	1, // 0: anduril.entitymanager.v1.Supplies.fuel:type_name -> anduril.entitymanager.v1.Fuel
	2, // 1: anduril.entitymanager.v1.Fuel.reported_date:type_name -> google.protobuf.Timestamp
	3, // 2: anduril.entitymanager.v1.Fuel.data_classification:type_name -> anduril.entitymanager.v1.Classification
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_anduril_entitymanager_v1_supplies_pub_proto_init() }
func file_anduril_entitymanager_v1_supplies_pub_proto_init() {
	if File_anduril_entitymanager_v1_supplies_pub_proto != nil {
		return
	}
	file_anduril_entitymanager_v1_classification_pub_proto_init()
	file_anduril_entitymanager_v1_options_pub_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anduril_entitymanager_v1_supplies_pub_proto_rawDesc), len(file_anduril_entitymanager_v1_supplies_pub_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_entitymanager_v1_supplies_pub_proto_goTypes,
		DependencyIndexes: file_anduril_entitymanager_v1_supplies_pub_proto_depIdxs,
		MessageInfos:      file_anduril_entitymanager_v1_supplies_pub_proto_msgTypes,
	}.Build()
	File_anduril_entitymanager_v1_supplies_pub_proto = out.File
	file_anduril_entitymanager_v1_supplies_pub_proto_goTypes = nil
	file_anduril_entitymanager_v1_supplies_pub_proto_depIdxs = nil
}
