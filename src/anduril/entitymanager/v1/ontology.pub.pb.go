// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: anduril/entitymanager/v1/ontology.pub.proto

package entitymanagerv1

import (
	v1 "github.com/anduril/lattice-sdk-go/src/anduril/ontology/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Provides the disposition, environment, and nationality of an Entity.
type MilView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disposition   v1.Disposition         `protobuf:"varint,1,opt,name=disposition,proto3,enum=anduril.ontology.v1.Disposition" json:"disposition,omitempty"`
	Environment   v1.Environment         `protobuf:"varint,2,opt,name=environment,proto3,enum=anduril.ontology.v1.Environment" json:"environment,omitempty"`
	Nationality   v1.Nationality         `protobuf:"varint,3,opt,name=nationality,proto3,enum=anduril.ontology.v1.Nationality" json:"nationality,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MilView) Reset() {
	*x = MilView{}
	mi := &file_anduril_entitymanager_v1_ontology_pub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MilView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilView) ProtoMessage() {}

func (x *MilView) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_ontology_pub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilView.ProtoReflect.Descriptor instead.
func (*MilView) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_ontology_pub_proto_rawDescGZIP(), []int{0}
}

func (x *MilView) GetDisposition() v1.Disposition {
	if x != nil {
		return x.Disposition
	}
	return v1.Disposition(0)
}

func (x *MilView) GetEnvironment() v1.Environment {
	if x != nil {
		return x.Environment
	}
	return v1.Environment(0)
}

func (x *MilView) GetNationality() v1.Nationality {
	if x != nil {
		return x.Nationality
	}
	return v1.Nationality(0)
}

// Ontology of the entity.
type Ontology struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A string that describes the entity's high-level type with natural language.
	PlatformType string `protobuf:"bytes,3,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	// A string that describes the entity's exact model or type.
	SpecificType string `protobuf:"bytes,4,opt,name=specific_type,json=specificType,proto3" json:"specific_type,omitempty"`
	// The template used when creating this entity. Specifies minimum required components.
	Template      Template `protobuf:"varint,2,opt,name=template,proto3,enum=anduril.entitymanager.v1.Template" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ontology) Reset() {
	*x = Ontology{}
	mi := &file_anduril_entitymanager_v1_ontology_pub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ontology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ontology) ProtoMessage() {}

func (x *Ontology) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entitymanager_v1_ontology_pub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ontology.ProtoReflect.Descriptor instead.
func (*Ontology) Descriptor() ([]byte, []int) {
	return file_anduril_entitymanager_v1_ontology_pub_proto_rawDescGZIP(), []int{1}
}

func (x *Ontology) GetPlatformType() string {
	if x != nil {
		return x.PlatformType
	}
	return ""
}

func (x *Ontology) GetSpecificType() string {
	if x != nil {
		return x.SpecificType
	}
	return ""
}

func (x *Ontology) GetTemplate() Template {
	if x != nil {
		return x.Template
	}
	return Template_TEMPLATE_INVALID
}

var File_anduril_entitymanager_v1_ontology_pub_proto protoreflect.FileDescriptor

const file_anduril_entitymanager_v1_ontology_pub_proto_rawDesc = "" +
	"\n" +
	"+anduril/entitymanager/v1/ontology.pub.proto\x12\x18anduril.entitymanager.v1\x1a*anduril/entitymanager/v1/options.pub.proto\x1a(anduril/entitymanager/v1/types.pub.proto\x1a\"anduril/ontology/v1/type.pub.proto\"\xe4\x01\n" +
	"\aMilView\x12G\n" +
	"\vdisposition\x18\x01 \x01(\x0e2 .anduril.ontology.v1.DispositionB\x03\xc8>\x01R\vdisposition\x12G\n" +
	"\venvironment\x18\x02 \x01(\x0e2 .anduril.ontology.v1.EnvironmentB\x03\xc8>\x01R\venvironment\x12G\n" +
	"\vnationality\x18\x03 \x01(\x0e2 .anduril.ontology.v1.NationalityB\x03\xc8>\x01R\vnationality\"\xb1\x01\n" +
	"\bOntology\x12(\n" +
	"\rplatform_type\x18\x03 \x01(\tB\x03\xc8>\x01R\fplatformType\x12(\n" +
	"\rspecific_type\x18\x04 \x01(\tB\x03\xc8>\x01R\fspecificType\x12>\n" +
	"\btemplate\x18\x02 \x01(\x0e2\".anduril.entitymanager.v1.TemplateR\btemplateJ\x04\b\x01\x10\x02R\vdescriptorsB\x82\x02\n" +
	"\x1ccom.anduril.entitymanager.v1B\x10OntologyPubProtoP\x01ZNgithub.com/anduril/lattice-sdk-go/src/anduril/entitymanager/v1;entitymanagerv1\xa2\x02\x03AEX\xaa\x02\x18Anduril.Entitymanager.V1\xca\x02\x18Anduril\\Entitymanager\\V1\xe2\x02$Anduril\\Entitymanager\\V1\\GPBMetadata\xea\x02\x1aAnduril::Entitymanager::V1b\x06proto3"

var (
	file_anduril_entitymanager_v1_ontology_pub_proto_rawDescOnce sync.Once
	file_anduril_entitymanager_v1_ontology_pub_proto_rawDescData []byte
)

func file_anduril_entitymanager_v1_ontology_pub_proto_rawDescGZIP() []byte {
	file_anduril_entitymanager_v1_ontology_pub_proto_rawDescOnce.Do(func() {
		file_anduril_entitymanager_v1_ontology_pub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anduril_entitymanager_v1_ontology_pub_proto_rawDesc), len(file_anduril_entitymanager_v1_ontology_pub_proto_rawDesc)))
	})
	return file_anduril_entitymanager_v1_ontology_pub_proto_rawDescData
}

var file_anduril_entitymanager_v1_ontology_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_anduril_entitymanager_v1_ontology_pub_proto_goTypes = []any{
	(*MilView)(nil),     // 0: anduril.entitymanager.v1.MilView
	(*Ontology)(nil),    // 1: anduril.entitymanager.v1.Ontology
	(v1.Disposition)(0), // 2: anduril.ontology.v1.Disposition
	(v1.Environment)(0), // 3: anduril.ontology.v1.Environment
	(v1.Nationality)(0), // 4: anduril.ontology.v1.Nationality
	(Template)(0),       // 5: anduril.entitymanager.v1.Template
}
var file_anduril_entitymanager_v1_ontology_pub_proto_depIdxs = []int32{
	2, // 0: anduril.entitymanager.v1.MilView.disposition:type_name -> anduril.ontology.v1.Disposition
	3, // 1: anduril.entitymanager.v1.MilView.environment:type_name -> anduril.ontology.v1.Environment
	4, // 2: anduril.entitymanager.v1.MilView.nationality:type_name -> anduril.ontology.v1.Nationality
	5, // 3: anduril.entitymanager.v1.Ontology.template:type_name -> anduril.entitymanager.v1.Template
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_anduril_entitymanager_v1_ontology_pub_proto_init() }
func file_anduril_entitymanager_v1_ontology_pub_proto_init() {
	if File_anduril_entitymanager_v1_ontology_pub_proto != nil {
		return
	}
	file_anduril_entitymanager_v1_options_pub_proto_init()
	file_anduril_entitymanager_v1_types_pub_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anduril_entitymanager_v1_ontology_pub_proto_rawDesc), len(file_anduril_entitymanager_v1_ontology_pub_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_entitymanager_v1_ontology_pub_proto_goTypes,
		DependencyIndexes: file_anduril_entitymanager_v1_ontology_pub_proto_depIdxs,
		MessageInfos:      file_anduril_entitymanager_v1_ontology_pub_proto_msgTypes,
	}.Build()
	File_anduril_entitymanager_v1_ontology_pub_proto = out.File
	file_anduril_entitymanager_v1_ontology_pub_proto_goTypes = nil
	file_anduril_entitymanager_v1_ontology_pub_proto_depIdxs = nil
}
