// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: anduril/entityhistory/v1/history.pub.proto

package entityhistoryv1

import (
	v1 "github.com/dogun-anduril/anduril-sdk-go/src/anduril/entitymanager/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HistoryType int32

const (
	HistoryType_HISTORY_TYPE_INVALID   HistoryType = 0
	HistoryType_HISTORY_TYPE_TRAIL     HistoryType = 1
	HistoryType_HISTORY_TYPE_SNAPSHOT  HistoryType = 2
	HistoryType_HISTORY_TYPE_COMPOSITE HistoryType = 3
)

// Enum value maps for HistoryType.
var (
	HistoryType_name = map[int32]string{
		0: "HISTORY_TYPE_INVALID",
		1: "HISTORY_TYPE_TRAIL",
		2: "HISTORY_TYPE_SNAPSHOT",
		3: "HISTORY_TYPE_COMPOSITE",
	}
	HistoryType_value = map[string]int32{
		"HISTORY_TYPE_INVALID":   0,
		"HISTORY_TYPE_TRAIL":     1,
		"HISTORY_TYPE_SNAPSHOT":  2,
		"HISTORY_TYPE_COMPOSITE": 3,
	}
)

func (x HistoryType) Enum() *HistoryType {
	p := new(HistoryType)
	*p = x
	return p
}

func (x HistoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HistoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_entityhistory_v1_history_pub_proto_enumTypes[0].Descriptor()
}

func (HistoryType) Type() protoreflect.EnumType {
	return &file_anduril_entityhistory_v1_history_pub_proto_enumTypes[0]
}

func (x HistoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HistoryType.Descriptor instead.
func (HistoryType) EnumDescriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{0}
}

type StorageSystem int32

const (
	StorageSystem_STORAGE_SYSTEM_INVALID    StorageSystem = 0
	StorageSystem_STORAGE_SYSTEM_PERSISTENT StorageSystem = 1
	StorageSystem_STORAGE_SYSTEM_EPHEMERAL  StorageSystem = 2
)

// Enum value maps for StorageSystem.
var (
	StorageSystem_name = map[int32]string{
		0: "STORAGE_SYSTEM_INVALID",
		1: "STORAGE_SYSTEM_PERSISTENT",
		2: "STORAGE_SYSTEM_EPHEMERAL",
	}
	StorageSystem_value = map[string]int32{
		"STORAGE_SYSTEM_INVALID":    0,
		"STORAGE_SYSTEM_PERSISTENT": 1,
		"STORAGE_SYSTEM_EPHEMERAL":  2,
	}
)

func (x StorageSystem) Enum() *StorageSystem {
	p := new(StorageSystem)
	*p = x
	return p
}

func (x StorageSystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageSystem) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_entityhistory_v1_history_pub_proto_enumTypes[1].Descriptor()
}

func (StorageSystem) Type() protoreflect.EnumType {
	return &file_anduril_entityhistory_v1_history_pub_proto_enumTypes[1]
}

func (x StorageSystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageSystem.Descriptor instead.
func (StorageSystem) EnumDescriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{1}
}

// Pages of requested history. One page is returned for each Query. If the
// returned data can not all fit into one grpc response, a NextPageToken
// will be returned. The page returned corresponds to the requested type
// of history in the HistoryQuery.
type HistoryPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*HistoryPage_TrailPage
	//	*HistoryPage_SnapshotPage
	//	*HistoryPage_CompositePage
	Type isHistoryPage_Type `protobuf_oneof:"type"`
}

func (x *HistoryPage) Reset() {
	*x = HistoryPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryPage) ProtoMessage() {}

func (x *HistoryPage) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryPage.ProtoReflect.Descriptor instead.
func (*HistoryPage) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{0}
}

func (m *HistoryPage) GetType() isHistoryPage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HistoryPage) GetTrailPage() *TrailPage {
	if x, ok := x.GetType().(*HistoryPage_TrailPage); ok {
		return x.TrailPage
	}
	return nil
}

func (x *HistoryPage) GetSnapshotPage() *SnapshotPage {
	if x, ok := x.GetType().(*HistoryPage_SnapshotPage); ok {
		return x.SnapshotPage
	}
	return nil
}

func (x *HistoryPage) GetCompositePage() *CompositePage {
	if x, ok := x.GetType().(*HistoryPage_CompositePage); ok {
		return x.CompositePage
	}
	return nil
}

type isHistoryPage_Type interface {
	isHistoryPage_Type()
}

type HistoryPage_TrailPage struct {
	TrailPage *TrailPage `protobuf:"bytes,1,opt,name=trail_page,json=trailPage,proto3,oneof"`
}

type HistoryPage_SnapshotPage struct {
	SnapshotPage *SnapshotPage `protobuf:"bytes,2,opt,name=snapshot_page,json=snapshotPage,proto3,oneof"`
}

type HistoryPage_CompositePage struct {
	CompositePage *CompositePage `protobuf:"bytes,3,opt,name=composite_page,json=compositePage,proto3,oneof"`
}

func (*HistoryPage_TrailPage) isHistoryPage_Type() {}

func (*HistoryPage_SnapshotPage) isHistoryPage_Type() {}

func (*HistoryPage_CompositePage) isHistoryPage_Type() {}

// A page of snapshots.
type SnapshotPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*Snapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
}

func (x *SnapshotPage) Reset() {
	*x = SnapshotPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotPage) ProtoMessage() {}

func (x *SnapshotPage) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotPage.ProtoReflect.Descriptor instead.
func (*SnapshotPage) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotPage) GetSnapshots() []*Snapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

// A page of trails.
type TrailPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trails []*Trail `protobuf:"bytes,1,rep,name=trails,proto3" json:"trails,omitempty"`
}

func (x *TrailPage) Reset() {
	*x = TrailPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrailPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrailPage) ProtoMessage() {}

func (x *TrailPage) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrailPage.ProtoReflect.Descriptor instead.
func (*TrailPage) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{2}
}

func (x *TrailPage) GetTrails() []*Trail {
	if x != nil {
		return x.Trails
	}
	return nil
}

// A page of composited history.
type CompositePage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*Snapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	Trails    []*Trail    `protobuf:"bytes,2,rep,name=trails,proto3" json:"trails,omitempty"`
}

func (x *CompositePage) Reset() {
	*x = CompositePage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompositePage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositePage) ProtoMessage() {}

func (x *CompositePage) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositePage.ProtoReflect.Descriptor instead.
func (*CompositePage) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{3}
}

func (x *CompositePage) GetSnapshots() []*Snapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *CompositePage) GetTrails() []*Trail {
	if x != nil {
		return x.Trails
	}
	return nil
}

// A snapshot is a summarized history for a given entity. It consists of the
// origin state for the entity, its current state, and snapshot events which
// represent major changes to the entity over its lifespan.
type Snapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The latest state for a given entity.
	LatestState *v1.Entity `protobuf:"bytes,1,opt,name=latest_state,json=latestState,proto3" json:"latest_state,omitempty"` // to be deprecated
	// The first observed state of the entity.
	OriginalState *v1.Entity `protobuf:"bytes,2,opt,name=original_state,json=originalState,proto3" json:"original_state,omitempty"` // to be deprecated
	// A set of events corresponding to significant changes in this entity.
	SnapshotEvents []*SnapshotEvent `protobuf:"bytes,3,rep,name=snapshot_events,json=snapshotEvents,proto3" json:"snapshot_events,omitempty"`
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{4}
}

func (x *Snapshot) GetLatestState() *v1.Entity {
	if x != nil {
		return x.LatestState
	}
	return nil
}

func (x *Snapshot) GetOriginalState() *v1.Entity {
	if x != nil {
		return x.OriginalState
	}
	return nil
}

func (x *Snapshot) GetSnapshotEvents() []*SnapshotEvent {
	if x != nil {
		return x.SnapshotEvents
	}
	return nil
}

// A snapshot event represents any significant change to the entity.
type SnapshotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Represents the type of event the occurred.
	//
	// Types that are assignable to Type:
	//
	//	*SnapshotEvent_EntityChangeEvent
	//	*SnapshotEvent_EntityState
	Type isSnapshotEvent_Type `protobuf_oneof:"type"`
}

func (x *SnapshotEvent) Reset() {
	*x = SnapshotEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotEvent) ProtoMessage() {}

func (x *SnapshotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotEvent.ProtoReflect.Descriptor instead.
func (*SnapshotEvent) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *SnapshotEvent) GetType() isSnapshotEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SnapshotEvent) GetEntityChangeEvent() *EntityChangeEvent {
	if x, ok := x.GetType().(*SnapshotEvent_EntityChangeEvent); ok {
		return x.EntityChangeEvent
	}
	return nil
}

func (x *SnapshotEvent) GetEntityState() *v1.EntityEvent {
	if x, ok := x.GetType().(*SnapshotEvent_EntityState); ok {
		return x.EntityState
	}
	return nil
}

type isSnapshotEvent_Type interface {
	isSnapshotEvent_Type()
}

type SnapshotEvent_EntityChangeEvent struct {
	EntityChangeEvent *EntityChangeEvent `protobuf:"bytes,2,opt,name=entity_change_event,json=entityChangeEvent,proto3,oneof"`
}

type SnapshotEvent_EntityState struct {
	EntityState *v1.EntityEvent `protobuf:"bytes,3,opt,name=entity_state,json=entityState,proto3,oneof"`
}

func (*SnapshotEvent_EntityChangeEvent) isSnapshotEvent_Type() {}

func (*SnapshotEvent_EntityState) isSnapshotEvent_Type() {}

// An entity change is encoded as a timestamp and two partial entity states
// representing the fields that changed on the entity. For example:
// From: Entity: { MilView: { Disposition: Neutral } }.
// To: Entity: { MilView: { Disposition: Suspicious } }.
//
// Clients can determine the updated fields by examining the entity partials
// included in from & to.
type EntityChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A partial of an entity state containing the old field(s).
	From *v1.Entity `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// A partial of an entity state containing the changed field(s).
	To *v1.Entity `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *EntityChangeEvent) Reset() {
	*x = EntityChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityChangeEvent) ProtoMessage() {}

func (x *EntityChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityChangeEvent.ProtoReflect.Descriptor instead.
func (*EntityChangeEvent) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{6}
}

func (x *EntityChangeEvent) GetFrom() *v1.Entity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *EntityChangeEvent) GetTo() *v1.Entity {
	if x != nil {
		return x.To
	}
	return nil
}

// A trail represents the historical positions of a given entity.
type Trail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The GUID of the trail's parent entity.
	EntityId    string        `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	TrailPoints []*TrailPoint `protobuf:"bytes,2,rep,name=trail_points,json=trailPoints,proto3" json:"trail_points,omitempty"`
}

func (x *Trail) Reset() {
	*x = Trail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trail) ProtoMessage() {}

func (x *Trail) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trail.ProtoReflect.Descriptor instead.
func (*Trail) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{7}
}

func (x *Trail) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *Trail) GetTrailPoints() []*TrailPoint {
	if x != nil {
		return x.TrailPoints
	}
	return nil
}

// A trail point consists of a timestamp, location, and uncertainty.
// The above information preserves kinematics, precise position, and
// uncertainty for all reported points.
type TrailPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp           *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Location            *v1.Location            `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	LocationUncertainty *v1.LocationUncertainty `protobuf:"bytes,3,opt,name=location_uncertainty,json=locationUncertainty,proto3" json:"location_uncertainty,omitempty"`
}

func (x *TrailPoint) Reset() {
	*x = TrailPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrailPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrailPoint) ProtoMessage() {}

func (x *TrailPoint) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrailPoint.ProtoReflect.Descriptor instead.
func (*TrailPoint) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{8}
}

func (x *TrailPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TrailPoint) GetLocation() *v1.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TrailPoint) GetLocationUncertainty() *v1.LocationUncertainty {
	if x != nil {
		return x.LocationUncertainty
	}
	return nil
}

// Query page token key used for EntityHistory and enables paginated query responses. Clients should not modify values and
// only provide the key back to the server if is_complete is false.
type HistoryPageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId       string        `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	PageNum       int32         `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	EntityId      string        `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	StorageSystem StorageSystem `protobuf:"varint,4,opt,name=storage_system,json=storageSystem,proto3,enum=anduril.entityhistory.v1.StorageSystem" json:"storage_system,omitempty"`
	// Query start time for the current entity in ISO-8601 format.
	StartTime string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// True if the query is complete, false if another request beginning with this key should be sent to consume more
	// data.
	IsComplete bool `protobuf:"varint,6,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
}

func (x *HistoryPageToken) Reset() {
	*x = HistoryPageToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryPageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryPageToken) ProtoMessage() {}

func (x *HistoryPageToken) ProtoReflect() protoreflect.Message {
	mi := &file_anduril_entityhistory_v1_history_pub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryPageToken.ProtoReflect.Descriptor instead.
func (*HistoryPageToken) Descriptor() ([]byte, []int) {
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP(), []int{9}
}

func (x *HistoryPageToken) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *HistoryPageToken) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *HistoryPageToken) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *HistoryPageToken) GetStorageSystem() StorageSystem {
	if x != nil {
		return x.StorageSystem
	}
	return StorageSystem_STORAGE_SYSTEM_INVALID
}

func (x *HistoryPageToken) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *HistoryPageToken) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

var File_anduril_entityhistory_v1_history_pub_proto protoreflect.FileDescriptor

var file_anduril_entityhistory_v1_history_pub_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x61, 0x6e,
	0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x35, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69,
	0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6e, 0x64,
	0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0d,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72,
	0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x69, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x40, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x12, 0x37, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x08, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x0d, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x5d, 0x0a, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72,
	0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x64, 0x75,
	0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x30, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3e, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x14, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x64, 0x75,
	0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x63,
	0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x52, 0x13, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x22, 0xf5, 0x01,
	0x0a, 0x10, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x2a, 0x76, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x52, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x68, 0x0a,
	0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54,
	0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x45, 0x52,
	0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x4f,
	0x52, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x50, 0x48, 0x45,
	0x4d, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x02, 0x42, 0x87, 0x02, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x50, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x75, 0x6e, 0x2d, 0x61, 0x6e,
	0x64, 0x75, 0x72, 0x69, 0x6c, 0x2f, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x2d, 0x73, 0x64,
	0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x61, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c,
	0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x41, 0x45, 0x58, 0xaa, 0x02, 0x18, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69,
	0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x18, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24,
	0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x41, 0x6e, 0x64, 0x75, 0x72, 0x69, 0x6c, 0x3a, 0x3a,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anduril_entityhistory_v1_history_pub_proto_rawDescOnce sync.Once
	file_anduril_entityhistory_v1_history_pub_proto_rawDescData = file_anduril_entityhistory_v1_history_pub_proto_rawDesc
)

func file_anduril_entityhistory_v1_history_pub_proto_rawDescGZIP() []byte {
	file_anduril_entityhistory_v1_history_pub_proto_rawDescOnce.Do(func() {
		file_anduril_entityhistory_v1_history_pub_proto_rawDescData = protoimpl.X.CompressGZIP(file_anduril_entityhistory_v1_history_pub_proto_rawDescData)
	})
	return file_anduril_entityhistory_v1_history_pub_proto_rawDescData
}

var file_anduril_entityhistory_v1_history_pub_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_anduril_entityhistory_v1_history_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_anduril_entityhistory_v1_history_pub_proto_goTypes = []any{
	(HistoryType)(0),               // 0: anduril.entityhistory.v1.HistoryType
	(StorageSystem)(0),             // 1: anduril.entityhistory.v1.StorageSystem
	(*HistoryPage)(nil),            // 2: anduril.entityhistory.v1.HistoryPage
	(*SnapshotPage)(nil),           // 3: anduril.entityhistory.v1.SnapshotPage
	(*TrailPage)(nil),              // 4: anduril.entityhistory.v1.TrailPage
	(*CompositePage)(nil),          // 5: anduril.entityhistory.v1.CompositePage
	(*Snapshot)(nil),               // 6: anduril.entityhistory.v1.Snapshot
	(*SnapshotEvent)(nil),          // 7: anduril.entityhistory.v1.SnapshotEvent
	(*EntityChangeEvent)(nil),      // 8: anduril.entityhistory.v1.EntityChangeEvent
	(*Trail)(nil),                  // 9: anduril.entityhistory.v1.Trail
	(*TrailPoint)(nil),             // 10: anduril.entityhistory.v1.TrailPoint
	(*HistoryPageToken)(nil),       // 11: anduril.entityhistory.v1.HistoryPageToken
	(*v1.Entity)(nil),              // 12: anduril.entitymanager.v1.Entity
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
	(*v1.EntityEvent)(nil),         // 14: anduril.entitymanager.v1.EntityEvent
	(*v1.Location)(nil),            // 15: anduril.entitymanager.v1.Location
	(*v1.LocationUncertainty)(nil), // 16: anduril.entitymanager.v1.LocationUncertainty
}
var file_anduril_entityhistory_v1_history_pub_proto_depIdxs = []int32{
	4,  // 0: anduril.entityhistory.v1.HistoryPage.trail_page:type_name -> anduril.entityhistory.v1.TrailPage
	3,  // 1: anduril.entityhistory.v1.HistoryPage.snapshot_page:type_name -> anduril.entityhistory.v1.SnapshotPage
	5,  // 2: anduril.entityhistory.v1.HistoryPage.composite_page:type_name -> anduril.entityhistory.v1.CompositePage
	6,  // 3: anduril.entityhistory.v1.SnapshotPage.snapshots:type_name -> anduril.entityhistory.v1.Snapshot
	9,  // 4: anduril.entityhistory.v1.TrailPage.trails:type_name -> anduril.entityhistory.v1.Trail
	6,  // 5: anduril.entityhistory.v1.CompositePage.snapshots:type_name -> anduril.entityhistory.v1.Snapshot
	9,  // 6: anduril.entityhistory.v1.CompositePage.trails:type_name -> anduril.entityhistory.v1.Trail
	12, // 7: anduril.entityhistory.v1.Snapshot.latest_state:type_name -> anduril.entitymanager.v1.Entity
	12, // 8: anduril.entityhistory.v1.Snapshot.original_state:type_name -> anduril.entitymanager.v1.Entity
	7,  // 9: anduril.entityhistory.v1.Snapshot.snapshot_events:type_name -> anduril.entityhistory.v1.SnapshotEvent
	13, // 10: anduril.entityhistory.v1.SnapshotEvent.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 11: anduril.entityhistory.v1.SnapshotEvent.entity_change_event:type_name -> anduril.entityhistory.v1.EntityChangeEvent
	14, // 12: anduril.entityhistory.v1.SnapshotEvent.entity_state:type_name -> anduril.entitymanager.v1.EntityEvent
	12, // 13: anduril.entityhistory.v1.EntityChangeEvent.from:type_name -> anduril.entitymanager.v1.Entity
	12, // 14: anduril.entityhistory.v1.EntityChangeEvent.to:type_name -> anduril.entitymanager.v1.Entity
	10, // 15: anduril.entityhistory.v1.Trail.trail_points:type_name -> anduril.entityhistory.v1.TrailPoint
	13, // 16: anduril.entityhistory.v1.TrailPoint.timestamp:type_name -> google.protobuf.Timestamp
	15, // 17: anduril.entityhistory.v1.TrailPoint.location:type_name -> anduril.entitymanager.v1.Location
	16, // 18: anduril.entityhistory.v1.TrailPoint.location_uncertainty:type_name -> anduril.entitymanager.v1.LocationUncertainty
	1,  // 19: anduril.entityhistory.v1.HistoryPageToken.storage_system:type_name -> anduril.entityhistory.v1.StorageSystem
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_anduril_entityhistory_v1_history_pub_proto_init() }
func file_anduril_entityhistory_v1_history_pub_proto_init() {
	if File_anduril_entityhistory_v1_history_pub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SnapshotPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TrailPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CompositePage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Snapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SnapshotEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EntityChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Trail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TrailPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anduril_entityhistory_v1_history_pub_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryPageToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_anduril_entityhistory_v1_history_pub_proto_msgTypes[0].OneofWrappers = []any{
		(*HistoryPage_TrailPage)(nil),
		(*HistoryPage_SnapshotPage)(nil),
		(*HistoryPage_CompositePage)(nil),
	}
	file_anduril_entityhistory_v1_history_pub_proto_msgTypes[5].OneofWrappers = []any{
		(*SnapshotEvent_EntityChangeEvent)(nil),
		(*SnapshotEvent_EntityState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anduril_entityhistory_v1_history_pub_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_entityhistory_v1_history_pub_proto_goTypes,
		DependencyIndexes: file_anduril_entityhistory_v1_history_pub_proto_depIdxs,
		EnumInfos:         file_anduril_entityhistory_v1_history_pub_proto_enumTypes,
		MessageInfos:      file_anduril_entityhistory_v1_history_pub_proto_msgTypes,
	}.Build()
	File_anduril_entityhistory_v1_history_pub_proto = out.File
	file_anduril_entityhistory_v1_history_pub_proto_rawDesc = nil
	file_anduril_entityhistory_v1_history_pub_proto_goTypes = nil
	file_anduril_entityhistory_v1_history_pub_proto_depIdxs = nil
}
