// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: anduril/ontology/v1/type.pub.proto

package ontologyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Refers to the relationship of the tracker to the operational object being represented.
// Maps 1 to 1 with mil-std affiliation. Pending is a default, yet to be classified object.
// Ranking from most friendly to most hostile:
// FRIENDLY
// ASSUMED FRIENDLY
// NEUTRAL
// PENDING
// UNKNOWN
// SUSPICIOUS
// HOSTILE
type Disposition int32

const (
	Disposition_DISPOSITION_UNKNOWN          Disposition = 0
	Disposition_DISPOSITION_FRIENDLY         Disposition = 1
	Disposition_DISPOSITION_HOSTILE          Disposition = 2
	Disposition_DISPOSITION_SUSPICIOUS       Disposition = 3
	Disposition_DISPOSITION_ASSUMED_FRIENDLY Disposition = 4
	Disposition_DISPOSITION_NEUTRAL          Disposition = 5
	Disposition_DISPOSITION_PENDING          Disposition = 6
)

// Enum value maps for Disposition.
var (
	Disposition_name = map[int32]string{
		0: "DISPOSITION_UNKNOWN",
		1: "DISPOSITION_FRIENDLY",
		2: "DISPOSITION_HOSTILE",
		3: "DISPOSITION_SUSPICIOUS",
		4: "DISPOSITION_ASSUMED_FRIENDLY",
		5: "DISPOSITION_NEUTRAL",
		6: "DISPOSITION_PENDING",
	}
	Disposition_value = map[string]int32{
		"DISPOSITION_UNKNOWN":          0,
		"DISPOSITION_FRIENDLY":         1,
		"DISPOSITION_HOSTILE":          2,
		"DISPOSITION_SUSPICIOUS":       3,
		"DISPOSITION_ASSUMED_FRIENDLY": 4,
		"DISPOSITION_NEUTRAL":          5,
		"DISPOSITION_PENDING":          6,
	}
)

func (x Disposition) Enum() *Disposition {
	p := new(Disposition)
	*p = x
	return p
}

func (x Disposition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Disposition) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_ontology_v1_type_pub_proto_enumTypes[0].Descriptor()
}

func (Disposition) Type() protoreflect.EnumType {
	return &file_anduril_ontology_v1_type_pub_proto_enumTypes[0]
}

func (x Disposition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Disposition.Descriptor instead.
func (Disposition) EnumDescriptor() ([]byte, []int) {
	return file_anduril_ontology_v1_type_pub_proto_rawDescGZIP(), []int{0}
}

// Describes the operating environment of an object. For more information refer to MIL-STD 2525D.
// Surface is used to describe objects on-top the water such as boats, while Sub-Surface is used to describe under the
// water.
type Environment int32

const (
	Environment_ENVIRONMENT_UNKNOWN     Environment = 0
	Environment_ENVIRONMENT_AIR         Environment = 1
	Environment_ENVIRONMENT_SURFACE     Environment = 2
	Environment_ENVIRONMENT_SUB_SURFACE Environment = 3
	Environment_ENVIRONMENT_LAND        Environment = 4
	Environment_ENVIRONMENT_SPACE       Environment = 5
)

// Enum value maps for Environment.
var (
	Environment_name = map[int32]string{
		0: "ENVIRONMENT_UNKNOWN",
		1: "ENVIRONMENT_AIR",
		2: "ENVIRONMENT_SURFACE",
		3: "ENVIRONMENT_SUB_SURFACE",
		4: "ENVIRONMENT_LAND",
		5: "ENVIRONMENT_SPACE",
	}
	Environment_value = map[string]int32{
		"ENVIRONMENT_UNKNOWN":     0,
		"ENVIRONMENT_AIR":         1,
		"ENVIRONMENT_SURFACE":     2,
		"ENVIRONMENT_SUB_SURFACE": 3,
		"ENVIRONMENT_LAND":        4,
		"ENVIRONMENT_SPACE":       5,
	}
)

func (x Environment) Enum() *Environment {
	p := new(Environment)
	*p = x
	return p
}

func (x Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_ontology_v1_type_pub_proto_enumTypes[1].Descriptor()
}

func (Environment) Type() protoreflect.EnumType {
	return &file_anduril_ontology_v1_type_pub_proto_enumTypes[1]
}

func (x Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment.Descriptor instead.
func (Environment) EnumDescriptor() ([]byte, []int) {
	return file_anduril_ontology_v1_type_pub_proto_rawDescGZIP(), []int{1}
}

// Describes Nationality or Alliance information. This is derived from ISO-3166.
type Nationality int32

const (
	Nationality_NATIONALITY_INVALID                                   Nationality = 0
	Nationality_NATIONALITY_ALBANIA                                   Nationality = 1
	Nationality_NATIONALITY_ALGERIA                                   Nationality = 62
	Nationality_NATIONALITY_ARGENTINA                                 Nationality = 79
	Nationality_NATIONALITY_ARMENIA                                   Nationality = 2
	Nationality_NATIONALITY_AUSTRALIA                                 Nationality = 3
	Nationality_NATIONALITY_AUSTRIA                                   Nationality = 4
	Nationality_NATIONALITY_AZERBAIJAN                                Nationality = 5
	Nationality_NATIONALITY_BELARUS                                   Nationality = 6
	Nationality_NATIONALITY_BELGIUM                                   Nationality = 7
	Nationality_NATIONALITY_BOLIVIA                                   Nationality = 106
	Nationality_NATIONALITY_BOSNIA_AND_HERZEGOVINA                    Nationality = 8
	Nationality_NATIONALITY_BRAZIL                                    Nationality = 80
	Nationality_NATIONALITY_BULGARIA                                  Nationality = 9
	Nationality_NATIONALITY_CAMBODIA                                  Nationality = 68
	Nationality_NATIONALITY_CANADA                                    Nationality = 10
	Nationality_NATIONALITY_CHILE                                     Nationality = 81
	Nationality_NATIONALITY_CHINA                                     Nationality = 72
	Nationality_NATIONALITY_COLOMBIA                                  Nationality = 82
	Nationality_NATIONALITY_CROATIA                                   Nationality = 11
	Nationality_NATIONALITY_CUBA                                      Nationality = 87
	Nationality_NATIONALITY_CYPRUS                                    Nationality = 53
	Nationality_NATIONALITY_CZECH_REPUBLIC                            Nationality = 12
	Nationality_NATIONALITY_DEMOCRATIC_PEOPLES_REPUBLIC_OF_KOREA      Nationality = 74
	Nationality_NATIONALITY_DENMARK                                   Nationality = 13
	Nationality_NATIONALITY_DOMINICAN_REPUBLIC                        Nationality = 88
	Nationality_NATIONALITY_ECUADOR                                   Nationality = 107
	Nationality_NATIONALITY_EGYPT                                     Nationality = 54
	Nationality_NATIONALITY_ESTONIA                                   Nationality = 14
	Nationality_NATIONALITY_ETHIOPIA                                  Nationality = 63
	Nationality_NATIONALITY_FINLAND                                   Nationality = 15
	Nationality_NATIONALITY_FRANCE                                    Nationality = 16
	Nationality_NATIONALITY_GEORGIA                                   Nationality = 17
	Nationality_NATIONALITY_GERMANY                                   Nationality = 18
	Nationality_NATIONALITY_GREECE                                    Nationality = 19
	Nationality_NATIONALITY_GUATEMALA                                 Nationality = 108
	Nationality_NATIONALITY_GUINEA                                    Nationality = 92
	Nationality_NATIONALITY_HUNGARY                                   Nationality = 20
	Nationality_NATIONALITY_ICELAND                                   Nationality = 21
	Nationality_NATIONALITY_INDIA                                     Nationality = 66
	Nationality_NATIONALITY_INDONESIA                                 Nationality = 103
	Nationality_NATIONALITY_INTERNATIONAL_RED_CROSS                   Nationality = 113
	Nationality_NATIONALITY_IRAQ                                      Nationality = 56
	Nationality_NATIONALITY_IRELAND                                   Nationality = 22
	Nationality_NATIONALITY_ISLAMIC_REPUBLIC_OF_IRAN                  Nationality = 55
	Nationality_NATIONALITY_ISRAEL                                    Nationality = 57
	Nationality_NATIONALITY_ITALY                                     Nationality = 23
	Nationality_NATIONALITY_JAMAICA                                   Nationality = 112
	Nationality_NATIONALITY_JAPAN                                     Nationality = 76
	Nationality_NATIONALITY_JORDAN                                    Nationality = 58
	Nationality_NATIONALITY_KAZAKHSTAN                                Nationality = 24
	Nationality_NATIONALITY_KUWAIT                                    Nationality = 90
	Nationality_NATIONALITY_KYRGHYZ_REPUBLIC                          Nationality = 25
	Nationality_NATIONALITY_LAO_PEOPLES_DEMOCRATIC_REPUBLIC           Nationality = 69
	Nationality_NATIONALITY_LATVIA                                    Nationality = 26
	Nationality_NATIONALITY_LEBANON                                   Nationality = 59
	Nationality_NATIONALITY_LIBERIA                                   Nationality = 64
	Nationality_NATIONALITY_LITHUANIA                                 Nationality = 27
	Nationality_NATIONALITY_LUXEMBOURG                                Nationality = 28
	Nationality_NATIONALITY_MADAGASCAR                                Nationality = 93
	Nationality_NATIONALITY_MALAYSIA                                  Nationality = 104
	Nationality_NATIONALITY_MALTA                                     Nationality = 29
	Nationality_NATIONALITY_MEXICO                                    Nationality = 83
	Nationality_NATIONALITY_MOLDOVA                                   Nationality = 30
	Nationality_NATIONALITY_MONTENEGRO                                Nationality = 31
	Nationality_NATIONALITY_MOROCCO                                   Nationality = 94
	Nationality_NATIONALITY_MYANMAR                                   Nationality = 102
	Nationality_NATIONALITY_NATO                                      Nationality = 32
	Nationality_NATIONALITY_NETHERLANDS                               Nationality = 33
	Nationality_NATIONALITY_NEW_ZEALAND                               Nationality = 78
	Nationality_NATIONALITY_NICARAGUA                                 Nationality = 109
	Nationality_NATIONALITY_NIGERIA                                   Nationality = 95
	Nationality_NATIONALITY_NORWAY                                    Nationality = 34
	Nationality_NATIONALITY_PAKISTAN                                  Nationality = 67
	Nationality_NATIONALITY_PANAMA                                    Nationality = 84
	Nationality_NATIONALITY_PARAGUAY                                  Nationality = 110
	Nationality_NATIONALITY_PERU                                      Nationality = 85
	Nationality_NATIONALITY_PHILIPPINES                               Nationality = 77
	Nationality_NATIONALITY_POLAND                                    Nationality = 35
	Nationality_NATIONALITY_PORTUGAL                                  Nationality = 36
	Nationality_NATIONALITY_REPUBLIC_OF_KOREA                         Nationality = 75
	Nationality_NATIONALITY_ROMANIA                                   Nationality = 37
	Nationality_NATIONALITY_RUSSIA                                    Nationality = 38
	Nationality_NATIONALITY_SAUDI_ARABIA                              Nationality = 60
	Nationality_NATIONALITY_SENEGAL                                   Nationality = 96
	Nationality_NATIONALITY_SERBIA                                    Nationality = 39
	Nationality_NATIONALITY_SINGAPORE                                 Nationality = 105
	Nationality_NATIONALITY_SLOVAKIA                                  Nationality = 40
	Nationality_NATIONALITY_SLOVENIA                                  Nationality = 41
	Nationality_NATIONALITY_SOUTH_AFRICA                              Nationality = 65
	Nationality_NATIONALITY_SPAIN                                     Nationality = 42
	Nationality_NATIONALITY_SUDAN                                     Nationality = 98
	Nationality_NATIONALITY_SWEDEN                                    Nationality = 43
	Nationality_NATIONALITY_SWITZERLAND                               Nationality = 44
	Nationality_NATIONALITY_SYRIAN_ARAB_REPUBLIC                      Nationality = 61
	Nationality_NATIONALITY_TAIWAN                                    Nationality = 73
	Nationality_NATIONALITY_TAJIKISTAN                                Nationality = 45
	Nationality_NATIONALITY_THAILAND                                  Nationality = 70
	Nationality_NATIONALITY_THE_FORMER_YUGOSLAV_REPUBLIC_OF_MACEDONIA Nationality = 46
	Nationality_NATIONALITY_TUNISIA                                   Nationality = 100
	Nationality_NATIONALITY_TURKEY                                    Nationality = 47
	Nationality_NATIONALITY_TURKMENISTAN                              Nationality = 48
	Nationality_NATIONALITY_UGANDA                                    Nationality = 101
	Nationality_NATIONALITY_UKRAINE                                   Nationality = 49
	Nationality_NATIONALITY_UNITED_KINGDOM                            Nationality = 50
	Nationality_NATIONALITY_UNITED_NATIONS                            Nationality = 89
	Nationality_NATIONALITY_UNITED_REPUBLIC_OF_TANZANIA               Nationality = 99
	Nationality_NATIONALITY_UNITED_STATES_OF_AMERICA                  Nationality = 51
	Nationality_NATIONALITY_URUGUAY                                   Nationality = 111
	Nationality_NATIONALITY_UZBEKISTAN                                Nationality = 52
	Nationality_NATIONALITY_VENEZUELA                                 Nationality = 86
	Nationality_NATIONALITY_VIETNAM                                   Nationality = 71
	Nationality_NATIONALITY_YEMEN                                     Nationality = 91
	Nationality_NATIONALITY_ZIMBABWE                                  Nationality = 97
)

// Enum value maps for Nationality.
var (
	Nationality_name = map[int32]string{
		0:   "NATIONALITY_INVALID",
		1:   "NATIONALITY_ALBANIA",
		62:  "NATIONALITY_ALGERIA",
		79:  "NATIONALITY_ARGENTINA",
		2:   "NATIONALITY_ARMENIA",
		3:   "NATIONALITY_AUSTRALIA",
		4:   "NATIONALITY_AUSTRIA",
		5:   "NATIONALITY_AZERBAIJAN",
		6:   "NATIONALITY_BELARUS",
		7:   "NATIONALITY_BELGIUM",
		106: "NATIONALITY_BOLIVIA",
		8:   "NATIONALITY_BOSNIA_AND_HERZEGOVINA",
		80:  "NATIONALITY_BRAZIL",
		9:   "NATIONALITY_BULGARIA",
		68:  "NATIONALITY_CAMBODIA",
		10:  "NATIONALITY_CANADA",
		81:  "NATIONALITY_CHILE",
		72:  "NATIONALITY_CHINA",
		82:  "NATIONALITY_COLOMBIA",
		11:  "NATIONALITY_CROATIA",
		87:  "NATIONALITY_CUBA",
		53:  "NATIONALITY_CYPRUS",
		12:  "NATIONALITY_CZECH_REPUBLIC",
		74:  "NATIONALITY_DEMOCRATIC_PEOPLES_REPUBLIC_OF_KOREA",
		13:  "NATIONALITY_DENMARK",
		88:  "NATIONALITY_DOMINICAN_REPUBLIC",
		107: "NATIONALITY_ECUADOR",
		54:  "NATIONALITY_EGYPT",
		14:  "NATIONALITY_ESTONIA",
		63:  "NATIONALITY_ETHIOPIA",
		15:  "NATIONALITY_FINLAND",
		16:  "NATIONALITY_FRANCE",
		17:  "NATIONALITY_GEORGIA",
		18:  "NATIONALITY_GERMANY",
		19:  "NATIONALITY_GREECE",
		108: "NATIONALITY_GUATEMALA",
		92:  "NATIONALITY_GUINEA",
		20:  "NATIONALITY_HUNGARY",
		21:  "NATIONALITY_ICELAND",
		66:  "NATIONALITY_INDIA",
		103: "NATIONALITY_INDONESIA",
		113: "NATIONALITY_INTERNATIONAL_RED_CROSS",
		56:  "NATIONALITY_IRAQ",
		22:  "NATIONALITY_IRELAND",
		55:  "NATIONALITY_ISLAMIC_REPUBLIC_OF_IRAN",
		57:  "NATIONALITY_ISRAEL",
		23:  "NATIONALITY_ITALY",
		112: "NATIONALITY_JAMAICA",
		76:  "NATIONALITY_JAPAN",
		58:  "NATIONALITY_JORDAN",
		24:  "NATIONALITY_KAZAKHSTAN",
		90:  "NATIONALITY_KUWAIT",
		25:  "NATIONALITY_KYRGHYZ_REPUBLIC",
		69:  "NATIONALITY_LAO_PEOPLES_DEMOCRATIC_REPUBLIC",
		26:  "NATIONALITY_LATVIA",
		59:  "NATIONALITY_LEBANON",
		64:  "NATIONALITY_LIBERIA",
		27:  "NATIONALITY_LITHUANIA",
		28:  "NATIONALITY_LUXEMBOURG",
		93:  "NATIONALITY_MADAGASCAR",
		104: "NATIONALITY_MALAYSIA",
		29:  "NATIONALITY_MALTA",
		83:  "NATIONALITY_MEXICO",
		30:  "NATIONALITY_MOLDOVA",
		31:  "NATIONALITY_MONTENEGRO",
		94:  "NATIONALITY_MOROCCO",
		102: "NATIONALITY_MYANMAR",
		32:  "NATIONALITY_NATO",
		33:  "NATIONALITY_NETHERLANDS",
		78:  "NATIONALITY_NEW_ZEALAND",
		109: "NATIONALITY_NICARAGUA",
		95:  "NATIONALITY_NIGERIA",
		34:  "NATIONALITY_NORWAY",
		67:  "NATIONALITY_PAKISTAN",
		84:  "NATIONALITY_PANAMA",
		110: "NATIONALITY_PARAGUAY",
		85:  "NATIONALITY_PERU",
		77:  "NATIONALITY_PHILIPPINES",
		35:  "NATIONALITY_POLAND",
		36:  "NATIONALITY_PORTUGAL",
		75:  "NATIONALITY_REPUBLIC_OF_KOREA",
		37:  "NATIONALITY_ROMANIA",
		38:  "NATIONALITY_RUSSIA",
		60:  "NATIONALITY_SAUDI_ARABIA",
		96:  "NATIONALITY_SENEGAL",
		39:  "NATIONALITY_SERBIA",
		105: "NATIONALITY_SINGAPORE",
		40:  "NATIONALITY_SLOVAKIA",
		41:  "NATIONALITY_SLOVENIA",
		65:  "NATIONALITY_SOUTH_AFRICA",
		42:  "NATIONALITY_SPAIN",
		98:  "NATIONALITY_SUDAN",
		43:  "NATIONALITY_SWEDEN",
		44:  "NATIONALITY_SWITZERLAND",
		61:  "NATIONALITY_SYRIAN_ARAB_REPUBLIC",
		73:  "NATIONALITY_TAIWAN",
		45:  "NATIONALITY_TAJIKISTAN",
		70:  "NATIONALITY_THAILAND",
		46:  "NATIONALITY_THE_FORMER_YUGOSLAV_REPUBLIC_OF_MACEDONIA",
		100: "NATIONALITY_TUNISIA",
		47:  "NATIONALITY_TURKEY",
		48:  "NATIONALITY_TURKMENISTAN",
		101: "NATIONALITY_UGANDA",
		49:  "NATIONALITY_UKRAINE",
		50:  "NATIONALITY_UNITED_KINGDOM",
		89:  "NATIONALITY_UNITED_NATIONS",
		99:  "NATIONALITY_UNITED_REPUBLIC_OF_TANZANIA",
		51:  "NATIONALITY_UNITED_STATES_OF_AMERICA",
		111: "NATIONALITY_URUGUAY",
		52:  "NATIONALITY_UZBEKISTAN",
		86:  "NATIONALITY_VENEZUELA",
		71:  "NATIONALITY_VIETNAM",
		91:  "NATIONALITY_YEMEN",
		97:  "NATIONALITY_ZIMBABWE",
	}
	Nationality_value = map[string]int32{
		"NATIONALITY_INVALID":                                   0,
		"NATIONALITY_ALBANIA":                                   1,
		"NATIONALITY_ALGERIA":                                   62,
		"NATIONALITY_ARGENTINA":                                 79,
		"NATIONALITY_ARMENIA":                                   2,
		"NATIONALITY_AUSTRALIA":                                 3,
		"NATIONALITY_AUSTRIA":                                   4,
		"NATIONALITY_AZERBAIJAN":                                5,
		"NATIONALITY_BELARUS":                                   6,
		"NATIONALITY_BELGIUM":                                   7,
		"NATIONALITY_BOLIVIA":                                   106,
		"NATIONALITY_BOSNIA_AND_HERZEGOVINA":                    8,
		"NATIONALITY_BRAZIL":                                    80,
		"NATIONALITY_BULGARIA":                                  9,
		"NATIONALITY_CAMBODIA":                                  68,
		"NATIONALITY_CANADA":                                    10,
		"NATIONALITY_CHILE":                                     81,
		"NATIONALITY_CHINA":                                     72,
		"NATIONALITY_COLOMBIA":                                  82,
		"NATIONALITY_CROATIA":                                   11,
		"NATIONALITY_CUBA":                                      87,
		"NATIONALITY_CYPRUS":                                    53,
		"NATIONALITY_CZECH_REPUBLIC":                            12,
		"NATIONALITY_DEMOCRATIC_PEOPLES_REPUBLIC_OF_KOREA":      74,
		"NATIONALITY_DENMARK":                                   13,
		"NATIONALITY_DOMINICAN_REPUBLIC":                        88,
		"NATIONALITY_ECUADOR":                                   107,
		"NATIONALITY_EGYPT":                                     54,
		"NATIONALITY_ESTONIA":                                   14,
		"NATIONALITY_ETHIOPIA":                                  63,
		"NATIONALITY_FINLAND":                                   15,
		"NATIONALITY_FRANCE":                                    16,
		"NATIONALITY_GEORGIA":                                   17,
		"NATIONALITY_GERMANY":                                   18,
		"NATIONALITY_GREECE":                                    19,
		"NATIONALITY_GUATEMALA":                                 108,
		"NATIONALITY_GUINEA":                                    92,
		"NATIONALITY_HUNGARY":                                   20,
		"NATIONALITY_ICELAND":                                   21,
		"NATIONALITY_INDIA":                                     66,
		"NATIONALITY_INDONESIA":                                 103,
		"NATIONALITY_INTERNATIONAL_RED_CROSS":                   113,
		"NATIONALITY_IRAQ":                                      56,
		"NATIONALITY_IRELAND":                                   22,
		"NATIONALITY_ISLAMIC_REPUBLIC_OF_IRAN":                  55,
		"NATIONALITY_ISRAEL":                                    57,
		"NATIONALITY_ITALY":                                     23,
		"NATIONALITY_JAMAICA":                                   112,
		"NATIONALITY_JAPAN":                                     76,
		"NATIONALITY_JORDAN":                                    58,
		"NATIONALITY_KAZAKHSTAN":                                24,
		"NATIONALITY_KUWAIT":                                    90,
		"NATIONALITY_KYRGHYZ_REPUBLIC":                          25,
		"NATIONALITY_LAO_PEOPLES_DEMOCRATIC_REPUBLIC":           69,
		"NATIONALITY_LATVIA":                                    26,
		"NATIONALITY_LEBANON":                                   59,
		"NATIONALITY_LIBERIA":                                   64,
		"NATIONALITY_LITHUANIA":                                 27,
		"NATIONALITY_LUXEMBOURG":                                28,
		"NATIONALITY_MADAGASCAR":                                93,
		"NATIONALITY_MALAYSIA":                                  104,
		"NATIONALITY_MALTA":                                     29,
		"NATIONALITY_MEXICO":                                    83,
		"NATIONALITY_MOLDOVA":                                   30,
		"NATIONALITY_MONTENEGRO":                                31,
		"NATIONALITY_MOROCCO":                                   94,
		"NATIONALITY_MYANMAR":                                   102,
		"NATIONALITY_NATO":                                      32,
		"NATIONALITY_NETHERLANDS":                               33,
		"NATIONALITY_NEW_ZEALAND":                               78,
		"NATIONALITY_NICARAGUA":                                 109,
		"NATIONALITY_NIGERIA":                                   95,
		"NATIONALITY_NORWAY":                                    34,
		"NATIONALITY_PAKISTAN":                                  67,
		"NATIONALITY_PANAMA":                                    84,
		"NATIONALITY_PARAGUAY":                                  110,
		"NATIONALITY_PERU":                                      85,
		"NATIONALITY_PHILIPPINES":                               77,
		"NATIONALITY_POLAND":                                    35,
		"NATIONALITY_PORTUGAL":                                  36,
		"NATIONALITY_REPUBLIC_OF_KOREA":                         75,
		"NATIONALITY_ROMANIA":                                   37,
		"NATIONALITY_RUSSIA":                                    38,
		"NATIONALITY_SAUDI_ARABIA":                              60,
		"NATIONALITY_SENEGAL":                                   96,
		"NATIONALITY_SERBIA":                                    39,
		"NATIONALITY_SINGAPORE":                                 105,
		"NATIONALITY_SLOVAKIA":                                  40,
		"NATIONALITY_SLOVENIA":                                  41,
		"NATIONALITY_SOUTH_AFRICA":                              65,
		"NATIONALITY_SPAIN":                                     42,
		"NATIONALITY_SUDAN":                                     98,
		"NATIONALITY_SWEDEN":                                    43,
		"NATIONALITY_SWITZERLAND":                               44,
		"NATIONALITY_SYRIAN_ARAB_REPUBLIC":                      61,
		"NATIONALITY_TAIWAN":                                    73,
		"NATIONALITY_TAJIKISTAN":                                45,
		"NATIONALITY_THAILAND":                                  70,
		"NATIONALITY_THE_FORMER_YUGOSLAV_REPUBLIC_OF_MACEDONIA": 46,
		"NATIONALITY_TUNISIA":                                   100,
		"NATIONALITY_TURKEY":                                    47,
		"NATIONALITY_TURKMENISTAN":                              48,
		"NATIONALITY_UGANDA":                                    101,
		"NATIONALITY_UKRAINE":                                   49,
		"NATIONALITY_UNITED_KINGDOM":                            50,
		"NATIONALITY_UNITED_NATIONS":                            89,
		"NATIONALITY_UNITED_REPUBLIC_OF_TANZANIA":               99,
		"NATIONALITY_UNITED_STATES_OF_AMERICA":                  51,
		"NATIONALITY_URUGUAY":                                   111,
		"NATIONALITY_UZBEKISTAN":                                52,
		"NATIONALITY_VENEZUELA":                                 86,
		"NATIONALITY_VIETNAM":                                   71,
		"NATIONALITY_YEMEN":                                     91,
		"NATIONALITY_ZIMBABWE":                                  97,
	}
)

func (x Nationality) Enum() *Nationality {
	p := new(Nationality)
	*p = x
	return p
}

func (x Nationality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Nationality) Descriptor() protoreflect.EnumDescriptor {
	return file_anduril_ontology_v1_type_pub_proto_enumTypes[2].Descriptor()
}

func (Nationality) Type() protoreflect.EnumType {
	return &file_anduril_ontology_v1_type_pub_proto_enumTypes[2]
}

func (x Nationality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Nationality.Descriptor instead.
func (Nationality) EnumDescriptor() ([]byte, []int) {
	return file_anduril_ontology_v1_type_pub_proto_rawDescGZIP(), []int{2}
}

var File_anduril_ontology_v1_type_pub_proto protoreflect.FileDescriptor

const file_anduril_ontology_v1_type_pub_proto_rawDesc = "" +
	"\n" +
	"\"anduril/ontology/v1/type.pub.proto\x12\x13anduril.ontology.v1*\xc9\x01\n" +
	"\vDisposition\x12\x17\n" +
	"\x13DISPOSITION_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14DISPOSITION_FRIENDLY\x10\x01\x12\x17\n" +
	"\x13DISPOSITION_HOSTILE\x10\x02\x12\x1a\n" +
	"\x16DISPOSITION_SUSPICIOUS\x10\x03\x12 \n" +
	"\x1cDISPOSITION_ASSUMED_FRIENDLY\x10\x04\x12\x17\n" +
	"\x13DISPOSITION_NEUTRAL\x10\x05\x12\x17\n" +
	"\x13DISPOSITION_PENDING\x10\x06*\x9e\x01\n" +
	"\vEnvironment\x12\x17\n" +
	"\x13ENVIRONMENT_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fENVIRONMENT_AIR\x10\x01\x12\x17\n" +
	"\x13ENVIRONMENT_SURFACE\x10\x02\x12\x1b\n" +
	"\x17ENVIRONMENT_SUB_SURFACE\x10\x03\x12\x14\n" +
	"\x10ENVIRONMENT_LAND\x10\x04\x12\x15\n" +
	"\x11ENVIRONMENT_SPACE\x10\x05*\xb7\x18\n" +
	"\vNationality\x12\x17\n" +
	"\x13NATIONALITY_INVALID\x10\x00\x12\x17\n" +
	"\x13NATIONALITY_ALBANIA\x10\x01\x12\x17\n" +
	"\x13NATIONALITY_ALGERIA\x10>\x12\x19\n" +
	"\x15NATIONALITY_ARGENTINA\x10O\x12\x17\n" +
	"\x13NATIONALITY_ARMENIA\x10\x02\x12\x19\n" +
	"\x15NATIONALITY_AUSTRALIA\x10\x03\x12\x17\n" +
	"\x13NATIONALITY_AUSTRIA\x10\x04\x12\x1a\n" +
	"\x16NATIONALITY_AZERBAIJAN\x10\x05\x12\x17\n" +
	"\x13NATIONALITY_BELARUS\x10\x06\x12\x17\n" +
	"\x13NATIONALITY_BELGIUM\x10\a\x12\x17\n" +
	"\x13NATIONALITY_BOLIVIA\x10j\x12&\n" +
	"\"NATIONALITY_BOSNIA_AND_HERZEGOVINA\x10\b\x12\x16\n" +
	"\x12NATIONALITY_BRAZIL\x10P\x12\x18\n" +
	"\x14NATIONALITY_BULGARIA\x10\t\x12\x18\n" +
	"\x14NATIONALITY_CAMBODIA\x10D\x12\x16\n" +
	"\x12NATIONALITY_CANADA\x10\n" +
	"\x12\x15\n" +
	"\x11NATIONALITY_CHILE\x10Q\x12\x15\n" +
	"\x11NATIONALITY_CHINA\x10H\x12\x18\n" +
	"\x14NATIONALITY_COLOMBIA\x10R\x12\x17\n" +
	"\x13NATIONALITY_CROATIA\x10\v\x12\x14\n" +
	"\x10NATIONALITY_CUBA\x10W\x12\x16\n" +
	"\x12NATIONALITY_CYPRUS\x105\x12\x1e\n" +
	"\x1aNATIONALITY_CZECH_REPUBLIC\x10\f\x124\n" +
	"0NATIONALITY_DEMOCRATIC_PEOPLES_REPUBLIC_OF_KOREA\x10J\x12\x17\n" +
	"\x13NATIONALITY_DENMARK\x10\r\x12\"\n" +
	"\x1eNATIONALITY_DOMINICAN_REPUBLIC\x10X\x12\x17\n" +
	"\x13NATIONALITY_ECUADOR\x10k\x12\x15\n" +
	"\x11NATIONALITY_EGYPT\x106\x12\x17\n" +
	"\x13NATIONALITY_ESTONIA\x10\x0e\x12\x18\n" +
	"\x14NATIONALITY_ETHIOPIA\x10?\x12\x17\n" +
	"\x13NATIONALITY_FINLAND\x10\x0f\x12\x16\n" +
	"\x12NATIONALITY_FRANCE\x10\x10\x12\x17\n" +
	"\x13NATIONALITY_GEORGIA\x10\x11\x12\x17\n" +
	"\x13NATIONALITY_GERMANY\x10\x12\x12\x16\n" +
	"\x12NATIONALITY_GREECE\x10\x13\x12\x19\n" +
	"\x15NATIONALITY_GUATEMALA\x10l\x12\x16\n" +
	"\x12NATIONALITY_GUINEA\x10\\\x12\x17\n" +
	"\x13NATIONALITY_HUNGARY\x10\x14\x12\x17\n" +
	"\x13NATIONALITY_ICELAND\x10\x15\x12\x15\n" +
	"\x11NATIONALITY_INDIA\x10B\x12\x19\n" +
	"\x15NATIONALITY_INDONESIA\x10g\x12'\n" +
	"#NATIONALITY_INTERNATIONAL_RED_CROSS\x10q\x12\x14\n" +
	"\x10NATIONALITY_IRAQ\x108\x12\x17\n" +
	"\x13NATIONALITY_IRELAND\x10\x16\x12(\n" +
	"$NATIONALITY_ISLAMIC_REPUBLIC_OF_IRAN\x107\x12\x16\n" +
	"\x12NATIONALITY_ISRAEL\x109\x12\x15\n" +
	"\x11NATIONALITY_ITALY\x10\x17\x12\x17\n" +
	"\x13NATIONALITY_JAMAICA\x10p\x12\x15\n" +
	"\x11NATIONALITY_JAPAN\x10L\x12\x16\n" +
	"\x12NATIONALITY_JORDAN\x10:\x12\x1a\n" +
	"\x16NATIONALITY_KAZAKHSTAN\x10\x18\x12\x16\n" +
	"\x12NATIONALITY_KUWAIT\x10Z\x12 \n" +
	"\x1cNATIONALITY_KYRGHYZ_REPUBLIC\x10\x19\x12/\n" +
	"+NATIONALITY_LAO_PEOPLES_DEMOCRATIC_REPUBLIC\x10E\x12\x16\n" +
	"\x12NATIONALITY_LATVIA\x10\x1a\x12\x17\n" +
	"\x13NATIONALITY_LEBANON\x10;\x12\x17\n" +
	"\x13NATIONALITY_LIBERIA\x10@\x12\x19\n" +
	"\x15NATIONALITY_LITHUANIA\x10\x1b\x12\x1a\n" +
	"\x16NATIONALITY_LUXEMBOURG\x10\x1c\x12\x1a\n" +
	"\x16NATIONALITY_MADAGASCAR\x10]\x12\x18\n" +
	"\x14NATIONALITY_MALAYSIA\x10h\x12\x15\n" +
	"\x11NATIONALITY_MALTA\x10\x1d\x12\x16\n" +
	"\x12NATIONALITY_MEXICO\x10S\x12\x17\n" +
	"\x13NATIONALITY_MOLDOVA\x10\x1e\x12\x1a\n" +
	"\x16NATIONALITY_MONTENEGRO\x10\x1f\x12\x17\n" +
	"\x13NATIONALITY_MOROCCO\x10^\x12\x17\n" +
	"\x13NATIONALITY_MYANMAR\x10f\x12\x14\n" +
	"\x10NATIONALITY_NATO\x10 \x12\x1b\n" +
	"\x17NATIONALITY_NETHERLANDS\x10!\x12\x1b\n" +
	"\x17NATIONALITY_NEW_ZEALAND\x10N\x12\x19\n" +
	"\x15NATIONALITY_NICARAGUA\x10m\x12\x17\n" +
	"\x13NATIONALITY_NIGERIA\x10_\x12\x16\n" +
	"\x12NATIONALITY_NORWAY\x10\"\x12\x18\n" +
	"\x14NATIONALITY_PAKISTAN\x10C\x12\x16\n" +
	"\x12NATIONALITY_PANAMA\x10T\x12\x18\n" +
	"\x14NATIONALITY_PARAGUAY\x10n\x12\x14\n" +
	"\x10NATIONALITY_PERU\x10U\x12\x1b\n" +
	"\x17NATIONALITY_PHILIPPINES\x10M\x12\x16\n" +
	"\x12NATIONALITY_POLAND\x10#\x12\x18\n" +
	"\x14NATIONALITY_PORTUGAL\x10$\x12!\n" +
	"\x1dNATIONALITY_REPUBLIC_OF_KOREA\x10K\x12\x17\n" +
	"\x13NATIONALITY_ROMANIA\x10%\x12\x16\n" +
	"\x12NATIONALITY_RUSSIA\x10&\x12\x1c\n" +
	"\x18NATIONALITY_SAUDI_ARABIA\x10<\x12\x17\n" +
	"\x13NATIONALITY_SENEGAL\x10`\x12\x16\n" +
	"\x12NATIONALITY_SERBIA\x10'\x12\x19\n" +
	"\x15NATIONALITY_SINGAPORE\x10i\x12\x18\n" +
	"\x14NATIONALITY_SLOVAKIA\x10(\x12\x18\n" +
	"\x14NATIONALITY_SLOVENIA\x10)\x12\x1c\n" +
	"\x18NATIONALITY_SOUTH_AFRICA\x10A\x12\x15\n" +
	"\x11NATIONALITY_SPAIN\x10*\x12\x15\n" +
	"\x11NATIONALITY_SUDAN\x10b\x12\x16\n" +
	"\x12NATIONALITY_SWEDEN\x10+\x12\x1b\n" +
	"\x17NATIONALITY_SWITZERLAND\x10,\x12$\n" +
	" NATIONALITY_SYRIAN_ARAB_REPUBLIC\x10=\x12\x16\n" +
	"\x12NATIONALITY_TAIWAN\x10I\x12\x1a\n" +
	"\x16NATIONALITY_TAJIKISTAN\x10-\x12\x18\n" +
	"\x14NATIONALITY_THAILAND\x10F\x129\n" +
	"5NATIONALITY_THE_FORMER_YUGOSLAV_REPUBLIC_OF_MACEDONIA\x10.\x12\x17\n" +
	"\x13NATIONALITY_TUNISIA\x10d\x12\x16\n" +
	"\x12NATIONALITY_TURKEY\x10/\x12\x1c\n" +
	"\x18NATIONALITY_TURKMENISTAN\x100\x12\x16\n" +
	"\x12NATIONALITY_UGANDA\x10e\x12\x17\n" +
	"\x13NATIONALITY_UKRAINE\x101\x12\x1e\n" +
	"\x1aNATIONALITY_UNITED_KINGDOM\x102\x12\x1e\n" +
	"\x1aNATIONALITY_UNITED_NATIONS\x10Y\x12+\n" +
	"'NATIONALITY_UNITED_REPUBLIC_OF_TANZANIA\x10c\x12(\n" +
	"$NATIONALITY_UNITED_STATES_OF_AMERICA\x103\x12\x17\n" +
	"\x13NATIONALITY_URUGUAY\x10o\x12\x1a\n" +
	"\x16NATIONALITY_UZBEKISTAN\x104\x12\x19\n" +
	"\x15NATIONALITY_VENEZUELA\x10V\x12\x17\n" +
	"\x13NATIONALITY_VIETNAM\x10G\x12\x15\n" +
	"\x11NATIONALITY_YEMEN\x10[\x12\x18\n" +
	"\x14NATIONALITY_ZIMBABWE\x10aB\xdb\x01\n" +
	"\x17com.anduril.ontology.v1B\fTypePubProtoP\x01ZDgithub.com/anduril/lattice-sdk-go/src/anduril/ontology/v1;ontologyv1\xa2\x02\x03AOX\xaa\x02\x13Anduril.Ontology.V1\xca\x02\x13Anduril\\Ontology\\V1\xe2\x02\x1fAnduril\\Ontology\\V1\\GPBMetadata\xea\x02\x15Anduril::Ontology::V1b\x06proto3"

var (
	file_anduril_ontology_v1_type_pub_proto_rawDescOnce sync.Once
	file_anduril_ontology_v1_type_pub_proto_rawDescData []byte
)

func file_anduril_ontology_v1_type_pub_proto_rawDescGZIP() []byte {
	file_anduril_ontology_v1_type_pub_proto_rawDescOnce.Do(func() {
		file_anduril_ontology_v1_type_pub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anduril_ontology_v1_type_pub_proto_rawDesc), len(file_anduril_ontology_v1_type_pub_proto_rawDesc)))
	})
	return file_anduril_ontology_v1_type_pub_proto_rawDescData
}

var file_anduril_ontology_v1_type_pub_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_anduril_ontology_v1_type_pub_proto_goTypes = []any{
	(Disposition)(0), // 0: anduril.ontology.v1.Disposition
	(Environment)(0), // 1: anduril.ontology.v1.Environment
	(Nationality)(0), // 2: anduril.ontology.v1.Nationality
}
var file_anduril_ontology_v1_type_pub_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_anduril_ontology_v1_type_pub_proto_init() }
func file_anduril_ontology_v1_type_pub_proto_init() {
	if File_anduril_ontology_v1_type_pub_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anduril_ontology_v1_type_pub_proto_rawDesc), len(file_anduril_ontology_v1_type_pub_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anduril_ontology_v1_type_pub_proto_goTypes,
		DependencyIndexes: file_anduril_ontology_v1_type_pub_proto_depIdxs,
		EnumInfos:         file_anduril_ontology_v1_type_pub_proto_enumTypes,
	}.Build()
	File_anduril_ontology_v1_type_pub_proto = out.File
	file_anduril_ontology_v1_type_pub_proto_goTypes = nil
	file_anduril_ontology_v1_type_pub_proto_depIdxs = nil
}
