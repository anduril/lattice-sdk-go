// Code generated by Fern. DO NOT EDIT.

package client

import (
	core "github.com/anduril/lattice-sdk-go/core"
	entities "github.com/anduril/lattice-sdk-go/entities"
	internal "github.com/anduril/lattice-sdk-go/internal"
	objects "github.com/anduril/lattice-sdk-go/objects"
	option "github.com/anduril/lattice-sdk-go/option"
	tasking "github.com/anduril/lattice-sdk-go/tasking"
	http "net/http"
)

type Client struct {
	Entities *entities.Client
	Tasking  *tasking.Client
	Objects  *objects.Client

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		Entities: entities.NewClient(opts...),
		Tasking:  tasking.NewClient(opts...),
		Objects:  objects.NewClient(opts...),
		baseURL:  options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}
